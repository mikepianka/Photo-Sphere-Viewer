{"version":3,"file":"gyroscope.js","sources":["../../src/plugins/gyroscope/constants.js","../../src/plugins/gyroscope/DeviceOrientationControls.js","../../src/plugins/gyroscope/GyroscopeButton.js","../../src/plugins/gyroscope/index.js"],"sourcesContent":["/**\r\n * @summary Available events\r\n * @enum {string}\r\n * @memberof PSV.plugins.GyroscopePlugin\r\n * @constant\r\n */\r\nexport const EVENTS = {\r\n  /**\r\n   * @event gyroscope-updated\r\n   * @memberof PSV.plugins.GyroscopePlugin\r\n   * @summary Triggered when the gyroscope mode is enabled/disabled\r\n   * @param {boolean} enabled\r\n   */\r\n  GYROSCOPE_UPDATED: 'gyroscope-updated',\r\n};\r\n","import {\r\n  Euler,\r\n  MathUtils,\r\n  Quaternion,\r\n  Vector3\r\n} from 'three';\r\n\r\nconst _zee = new Vector3( 0, 0, 1 );\r\nconst _euler = new Euler();\r\nconst _q0 = new Quaternion();\r\nconst _q1 = new Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n/**\r\n * Copied from three.js examples before deletion in r134\r\n * (deleted because of constructors/OS inconsistencies)\r\n * @private\r\n */\r\nclass DeviceOrientationControls {\r\n\r\n  constructor( object ) {\r\n\r\n    if ( window.isSecureContext === false ) {\r\n\r\n      console.error( 'THREE.DeviceOrientationControls: DeviceOrientationEvent is only available in secure contexts (https)' );\r\n\r\n    }\r\n\r\n    const scope = this;\r\n\r\n    const EPS = 0.000001;\r\n    const lastQuaternion = new Quaternion();\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n\r\n    const onDeviceOrientationChangeEvent = function ( event ) {\r\n\r\n      scope.deviceOrientation = event;\r\n\r\n    };\r\n\r\n    const onScreenOrientationChangeEvent = function () {\r\n\r\n      scope.screenOrientation = window.orientation || 0;\r\n\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n\r\n    const setObjectQuaternion = function ( quaternion, alpha, beta, gamma, orient ) {\r\n\r\n      _euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n\r\n      quaternion.setFromEuler( _euler ); // orient the device\r\n\r\n      quaternion.multiply( _q1 ); // camera looks out the back of the device, not the top\r\n\r\n      quaternion.multiply( _q0.setFromAxisAngle( _zee, - orient ) ); // adjust for screen orientation\r\n\r\n    };\r\n\r\n    this.connect = function () {\r\n\r\n      onScreenOrientationChangeEvent(); // run once on load\r\n\r\n      // iOS 13+\r\n\r\n      if ( window.DeviceOrientationEvent !== undefined && typeof window.DeviceOrientationEvent.requestPermission === 'function' ) {\r\n\r\n        window.DeviceOrientationEvent.requestPermission().then( function ( response ) {\r\n\r\n          if ( response == 'granted' ) {\r\n\r\n            window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent );\r\n            window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\r\n\r\n          }\r\n\r\n        } ).catch( function ( error ) {\r\n\r\n          console.error( 'THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error );\r\n\r\n        } );\r\n\r\n      } else {\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\r\n\r\n      }\r\n\r\n      scope.enabled = true;\r\n\r\n    };\r\n\r\n    this.disconnect = function () {\r\n\r\n      window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent );\r\n      window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\r\n\r\n      scope.enabled = false;\r\n\r\n    };\r\n\r\n    this.update = function () {\r\n\r\n      if ( scope.enabled === false ) return;\r\n\r\n      const device = scope.deviceOrientation;\r\n\r\n      if ( device ) {\r\n\r\n        const alpha = device.alpha ? MathUtils.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\r\n\r\n        const beta = device.beta ? MathUtils.degToRad( device.beta ) : 0; // X'\r\n\r\n        const gamma = device.gamma ? MathUtils.degToRad( device.gamma ) : 0; // Y''\r\n\r\n        const orient = scope.screenOrientation ? MathUtils.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n        setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n\r\n        if ( 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\r\n\r\n          lastQuaternion.copy( scope.object.quaternion );\r\n\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this.dispose = function () {\r\n\r\n      scope.disconnect();\r\n\r\n    };\r\n\r\n    this.connect();\r\n\r\n  }\r\n\r\n}\r\n\r\nexport { DeviceOrientationControls };\r\n","import { AbstractButton } from '../..';\r\nimport compass from './compass.svg';\r\nimport { EVENTS } from './constants';\r\n\r\n/**\r\n * @summary Navigation bar gyroscope button class\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class GyroscopeButton extends AbstractButton {\r\n\r\n  static id = 'gyroscope';\r\n  static icon = compass;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-gyroscope-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.GyroscopePlugin}\r\n     * @readonly\r\n     * @private\r\n     */\r\n    this.plugin = this.psv.getPlugin('gyroscope');\r\n\r\n    if (this.plugin) {\r\n      this.plugin.on(EVENTS.GYROSCOPE_UPDATED, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    if (this.plugin) {\r\n      this.plugin.off(EVENTS.GYROSCOPE_UPDATED, this);\r\n    }\r\n\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !this.plugin ? false : { initial: false, promise: this.plugin.prop.isSupported };\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    if (e.type === EVENTS.GYROSCOPE_UPDATED) {\r\n      this.toggleActive(e.args[0]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles gyroscope control\r\n   */\r\n  onClick() {\r\n    this.plugin.toggle();\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, registerButton, utils } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport { DeviceOrientationControls } from './DeviceOrientationControls';\r\nimport { GyroscopeButton } from './GyroscopeButton';\r\n\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.GyroscopePlugin.Options\r\n * @property {boolean} [touchmove=true] - allows to pan horizontally when the gyroscope is enabled (requires global `mousemove=true`)\r\n * @property {boolean} [absolutePosition=false] - when true the view will ignore the current direction when enabling gyroscope control\r\n * @property {'smooth' | 'fast'} [moveMode='smooth'] - How the gyroscope data is used to rotate the panorama.\r\n */\r\n\r\n\r\n// add gyroscope button\r\nDEFAULTS.lang[GyroscopeButton.id] = 'Gyroscope';\r\nregisterButton(GyroscopeButton, 'caption:right');\r\n\r\n\r\nexport { EVENTS } from './constants';\r\n\r\n\r\nconst direction = new THREE.Vector3();\r\n\r\n\r\n/**\r\n * @summary Adds gyroscope controls on mobile devices\r\n * @extends PSV.plugins.AbstractPlugin\r\n * @memberof PSV.plugins\r\n */\r\nexport class GyroscopePlugin extends AbstractPlugin {\r\n\r\n  static id = 'gyroscope';\r\n\r\n  static EVENTS = EVENTS;\r\n\r\n  /**\r\n   * @param {PSV.Viewer} psv\r\n   * @param {PSV.plugins.GyroscopePlugin.Options} options\r\n   */\r\n  constructor(psv, options) {\r\n    super(psv);\r\n\r\n    /**\r\n     * @member {Object}\r\n     * @private\r\n     * @property {Promise<boolean>} isSupported - indicates of the gyroscope API is available\r\n     * @property {number} alphaOffset - current alpha offset for gyroscope controls\r\n     * @property {boolean} enabled\r\n     * @property {boolean} config_moveInertia - original config \"moveInertia\"\r\n     */\r\n    this.prop = {\r\n      isSupported       : this.__checkSupport(),\r\n      alphaOffset       : 0,\r\n      enabled           : false,\r\n      config_moveInertia: true,\r\n    };\r\n\r\n    /**\r\n     * @member {PSV.plugins.GyroscopePlugin.Options}\r\n     * @private\r\n     */\r\n    this.config = {\r\n      touchmove       : true,\r\n      absolutePosition: false,\r\n      moveMode: 'smooth',\r\n      ...options,\r\n    };\r\n\r\n    /**\r\n     * @member {DeviceOrientationControls}\r\n     * @private\r\n     */\r\n    this.controls = null;\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  init() {\r\n    super.init();\r\n\r\n    this.psv.on(CONSTANTS.EVENTS.STOP_ALL, this);\r\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_ROTATE, this);\r\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.STOP_ALL, this);\r\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_ROTATE, this);\r\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\r\n\r\n    this.stop();\r\n\r\n    delete this.controls;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.STOP_ALL:\r\n        this.stop();\r\n        break;\r\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\r\n        this.__onBeforeRender();\r\n        break;\r\n      case CONSTANTS.EVENTS.BEFORE_ROTATE:\r\n        this.__onBeforeRotate(e);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if the gyroscope is enabled\r\n   * @returns {boolean}\r\n   */\r\n  isEnabled() {\r\n    return this.prop.enabled;\r\n  }\r\n\r\n  /**\r\n   * @summary Enables the gyroscope navigation if available\r\n   * @returns {Promise}\r\n   * @fires PSV.plugins.GyroscopePlugin.gyroscope-updated\r\n   * @throws {PSV.PSVError} if the gyroscope API is not available/granted\r\n   */\r\n  start() {\r\n    return this.prop.isSupported\r\n      .then((supported) => {\r\n        if (supported) {\r\n          return this.__requestPermission();\r\n        }\r\n        else {\r\n          utils.logWarn('gyroscope not available');\r\n          return Promise.reject();\r\n        }\r\n      })\r\n      .then((granted) => {\r\n        if (granted) {\r\n          return Promise.resolve();\r\n        }\r\n        else {\r\n          utils.logWarn('gyroscope not allowed');\r\n          return Promise.reject();\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.psv.__stopAll();\r\n\r\n        // disable inertia\r\n        this.prop.config_moveInertia = this.psv.config.moveInertia;\r\n        this.psv.config.moveInertia = false;\r\n\r\n        // enable gyro controls\r\n        if (!this.controls) {\r\n          this.controls = new DeviceOrientationControls(new THREE.Object3D());\r\n        }\r\n        else {\r\n          this.controls.connect();\r\n        }\r\n\r\n        // force reset\r\n        this.controls.deviceOrientation = null;\r\n        this.controls.screenOrientation = 0;\r\n        this.controls.alphaOffset = 0;\r\n\r\n        this.prop.alphaOffset = this.config.absolutePosition ? 0 : null;\r\n        this.prop.enabled = true;\r\n\r\n        this.trigger(EVENTS.GYROSCOPE_UPDATED, true);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @summary Disables the gyroscope navigation\r\n   * @fires PSV.plugins.GyroscopePlugin.gyroscope-updated\r\n   */\r\n  stop() {\r\n    if (this.isEnabled()) {\r\n      this.controls.disconnect();\r\n\r\n      this.prop.enabled = false;\r\n      this.psv.config.moveInertia = this.prop.config_moveInertia;\r\n\r\n      this.trigger(EVENTS.GYROSCOPE_UPDATED, false);\r\n\r\n      this.psv.resetIdleTimer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Enables or disables the gyroscope navigation\r\n   */\r\n  toggle() {\r\n    if (this.isEnabled()) {\r\n      this.stop();\r\n    }\r\n    else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Handles gyro movements\r\n   * @private\r\n   */\r\n  __onBeforeRender() {\r\n    if (!this.isEnabled()) {\r\n      return;\r\n    }\r\n\r\n    if (!this.controls.deviceOrientation) {\r\n      return;\r\n    }\r\n\r\n    const position = this.psv.getPosition();\r\n\r\n    // on first run compute the offset depending on the current viewer position and device orientation\r\n    if (this.prop.alphaOffset === null) {\r\n      this.controls.update();\r\n      this.controls.object.getWorldDirection(direction);\r\n\r\n      const sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(direction);\r\n      this.prop.alphaOffset = sphericalCoords.longitude - position.longitude;\r\n    }\r\n    else {\r\n      this.controls.alphaOffset = this.prop.alphaOffset;\r\n      this.controls.update();\r\n      this.controls.object.getWorldDirection(direction);\r\n\r\n      const sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(direction);\r\n\r\n      const target = {\r\n        longitude: sphericalCoords.longitude,\r\n        latitude : -sphericalCoords.latitude,\r\n      };\r\n\r\n      // having a slow speed on smalls movements allows to absorb the device/hand vibrations\r\n      const step = this.config.moveMode === 'smooth' ? 3 : 10;\r\n      this.psv.dynamics.position.goto(target, utils.getAngle(position, target) < 0.01 ? 1 : step);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Intercepts moves and offsets the alpha angle\r\n   * @param {external:uEvent.Event} e\r\n   * @private\r\n   */\r\n  __onBeforeRotate(e) {\r\n    if (this.isEnabled()) {\r\n      e.preventDefault();\r\n\r\n      if (this.config.touchmove) {\r\n        this.prop.alphaOffset -= e.args[0].longitude - this.psv.getPosition().longitude;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Detects if device orientation is supported\r\n   * @returns {Promise<boolean>}\r\n   * @private\r\n   */\r\n  __checkSupport() {\r\n    if ('DeviceMotionEvent' in window && typeof DeviceMotionEvent.requestPermission === 'function') {\r\n      return Promise.resolve(true);\r\n    }\r\n    else if ('DeviceOrientationEvent' in window) {\r\n      return new Promise((resolve) => {\r\n        const listener = (e) => {\r\n          resolve(e && e.alpha !== null && !isNaN(e.alpha));\r\n\r\n          window.removeEventListener('deviceorientation', listener);\r\n        };\r\n\r\n        window.addEventListener('deviceorientation', listener, false);\r\n        setTimeout(listener, 10000);\r\n      });\r\n    }\r\n    else {\r\n      return Promise.resolve(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Request permission to the motion API\r\n   * @returns {Promise<boolean>}\r\n   * @private\r\n   */\r\n  __requestPermission() {\r\n    if ('DeviceMotionEvent' in window && typeof DeviceMotionEvent.requestPermission === 'function') {\r\n      return DeviceOrientationEvent.requestPermission()\r\n        .then(response => response === 'granted')\r\n        .catch(() => false);\r\n    }\r\n    else {\r\n      return Promise.resolve(true);\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":["EVENTS","GYROSCOPE_UPDATED","_zee","Vector3","_euler","Euler","_q0","Quaternion","_q1","Math","sqrt","DeviceOrientationControls","object","window","isSecureContext","console","error","scope","EPS","lastQuaternion","rotation","reorder","enabled","deviceOrientation","screenOrientation","alphaOffset","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","quaternion","alpha","beta","gamma","orient","set","setFromEuler","multiply","setFromAxisAngle","connect","DeviceOrientationEvent","undefined","requestPermission","then","response","addEventListener","catch","disconnect","removeEventListener","update","device","MathUtils","degToRad","dot","copy","dispose","GyroscopeButton","navbar","plugin","psv","getPlugin","on","destroy","off","isSupported","initial","promise","prop","handleEvent","e","type","toggleActive","args","onClick","toggle","AbstractButton","id","icon","compass","DEFAULTS","lang","registerButton","direction","THREE","GyroscopePlugin","options","__checkSupport","config_moveInertia","config","touchmove","absolutePosition","moveMode","controls","init","CONSTANTS","STOP_ALL","BEFORE_ROTATE","BEFORE_RENDER","stop","__onBeforeRender","__onBeforeRotate","isEnabled","start","supported","__requestPermission","utils","logWarn","Promise","reject","granted","resolve","__stopAll","moveInertia","Object3D","trigger","resetIdleTimer","position","getPosition","getWorldDirection","sphericalCoords","dataHelper","vector3ToSphericalCoords","longitude","target","latitude","step","dynamics","goto","getAngle","preventDefault","DeviceMotionEvent","listener","isNaN","setTimeout","AbstractPlugin"],"mappings":"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"}