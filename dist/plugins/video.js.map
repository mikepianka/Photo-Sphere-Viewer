{"version":3,"file":"video.js","sources":["../../src/plugins/video/constants.js","../../src/plugins/video/PauseOverlay.js","../../src/plugins/video/PlayPauseButton.js","../../src/plugins/video/utils.js","../../src/plugins/video/ProgressBar.js","../../src/plugins/video/TimeCaption.js","../../src/plugins/video/VolumeButton.js","../../src/plugins/video/index.js"],"sourcesContent":["export const EVENTS = {\r\n  /**\r\n   * @event play\r\n   * @memberof PSV.plugins.VideoPlugin\r\n   * @summary Triggered when the video starts playing\r\n   */\r\n  PLAY         : 'play',\r\n  /**\r\n   * @event pause\r\n   * @memberof PSV.plugins.VideoPlugin\r\n   * @summary Triggered when the video is paused\r\n   */\r\n  PAUSE        : 'pause',\r\n  /**\r\n   * @event volume-change\r\n   * @memberof PSV.plugins.VideoPlugin\r\n   * @summary Triggered when the video volume changes\r\n   * @param {number} volume\r\n   */\r\n  VOLUME_CHANGE: 'volume-change',\r\n  /**\r\n   * @event progress\r\n   * @memberof PSV.plugins.VideoPlugin\r\n   * @summary Triggered when the video play progression changes\r\n   * @param {{time: number, duration: number, progress: number}} data\r\n   */\r\n  PROGRESS     : 'progress',\r\n  /**\r\n   * @event buffer\r\n   * @memberof PSV.plugins.VideoPlugin\r\n   * @summary Triggered when the video buffer changes\r\n   * @param {number} maxBuffer\r\n   */\r\n  BUFFER       : 'buffer',\r\n};\r\n","import { AbstractComponent, CONSTANTS, utils } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport playIcon from './play.svg';\r\n\r\n/**\r\n * @private\r\n */\r\nexport class PauseOverlay extends AbstractComponent {\r\n\r\n  constructor(plugin) {\r\n    super(plugin.psv, 'psv-video-overlay');\r\n\r\n    /**\r\n     * @type {PSV.plugins.VideoPlugin}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.plugin = plugin;\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.button = document.createElement('button');\r\n    this.button.className = 'psv-video-bigbutton';\r\n    this.button.innerHTML = playIcon;\r\n    this.container.appendChild(this.button);\r\n\r\n    this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.plugin.on(EVENTS.PLAY, this);\r\n    this.plugin.on(EVENTS.PAUSE, this);\r\n    this.button.addEventListener('click', this);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.plugin.off(EVENTS.PLAY, this);\r\n    this.plugin.off(EVENTS.PAUSE, this);\r\n\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.PANORAMA_LOADED:\r\n      case EVENTS.PLAY:\r\n      case EVENTS.PAUSE:\r\n        utils.toggleClass(this.button, 'psv-video-bigbutton--pause', !this.plugin.isPlaying());\r\n        break;\r\n      case 'click':\r\n        this.plugin.playPause();\r\n        break;\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n}\r\n","import { AbstractButton } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport pauseIcon from './pause.svg';\r\nimport playIcon from './play.svg';\r\n\r\n/**\r\n * @summary Navigation bar video play/pause button\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class PlayPauseButton extends AbstractButton {\r\n\r\n  static id = 'videoPlay';\r\n  static groupId = 'video';\r\n  static icon = playIcon;\r\n  static iconActive = pauseIcon;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-video-play-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.VideoPlugin}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.plugin = this.psv.getPlugin('video');\r\n\r\n    if (this.plugin) {\r\n      this.plugin.on(EVENTS.PLAY, this);\r\n      this.plugin.on(EVENTS.PAUSE, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    if (this.plugin) {\r\n      this.plugin.off(EVENTS.PLAY, this);\r\n      this.plugin.off(EVENTS.PAUSE, this);\r\n    }\r\n\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !!this.plugin;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      case EVENTS.PLAY:\r\n      case EVENTS.PAUSE:\r\n        this.toggleActive(this.plugin.isPlaying());\r\n        break;\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles video playback\r\n   */\r\n  onClick() {\r\n    this.plugin.playPause();\r\n  }\r\n\r\n}\r\n","/**\r\n * @private\r\n */\r\nexport function formatTime(time) {\r\n  const seconds = Math.round(time % 60);\r\n  const minutes = Math.round(time - seconds) / 60;\r\n  return `${minutes}:${('0' + seconds).slice(-2)}`;\r\n}\r\n","import { AbstractComponent, CONSTANTS, utils } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport { formatTime } from './utils';\r\n\r\n/**\r\n * @private\r\n */\r\nexport class ProgressBar extends AbstractComponent {\r\n\r\n  constructor(plugin) {\r\n    super(plugin.psv, 'psv-video-progressbar');\r\n\r\n    /**\r\n     * @type {PSV.plugins.VideoPlugin}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.plugin = plugin;\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.bufferElt = document.createElement('div');\r\n    this.bufferElt.className = 'psv-video-progressbar__buffer';\r\n    this.container.appendChild(this.bufferElt);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.progressElt = document.createElement('div');\r\n    this.progressElt.className = 'psv-video-progressbar__progress';\r\n    this.container.appendChild(this.progressElt);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.handleElt = document.createElement('div');\r\n    this.handleElt.className = 'psv-video-progressbar__handle';\r\n    this.container.appendChild(this.handleElt);\r\n\r\n    /**\r\n     * @type {PSV.utils.Slider}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.slider = new utils.Slider({\r\n      psv      : this.psv,\r\n      container: this.container,\r\n      direction: utils.Slider.HORIZONTAL,\r\n      onUpdate : e => this.__onSliderUpdate(e),\r\n    });\r\n\r\n    this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.plugin.on(EVENTS.BUFFER, this);\r\n    this.plugin.on(EVENTS.PROGRESS, this);\r\n\r\n    this.prop.req = window.requestAnimationFrame(() => this.__updateProgress());\r\n\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.plugin.off(EVENTS.BUFFER, this);\r\n    this.plugin.off(EVENTS.PROGRESS, this);\r\n\r\n    this.slider.destroy();\r\n    this.prop.tooltip?.hide();\r\n    window.cancelAnimationFrame(this.prop.req);\r\n\r\n    delete this.prop.tooltip;\r\n    delete this.slider;\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.PANORAMA_LOADED:\r\n      case EVENTS.BUFFER:\r\n      case EVENTS.PROGRESS:\r\n        this.bufferElt.style.width = `${this.plugin.getBufferProgress() * 100}%`;\r\n        break;\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __updateProgress() {\r\n    this.progressElt.style.width = `${this.plugin.getProgress() * 100}%`;\r\n\r\n    this.prop.req = window.requestAnimationFrame(() => this.__updateProgress());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onSliderUpdate(e) {\r\n    if (e.mouseover) {\r\n      this.handleElt.style.display = 'block';\r\n      this.handleElt.style.left = `${e.value * 100}%`;\r\n\r\n      const time = formatTime(this.plugin.getDuration() * e.value);\r\n\r\n      if (!this.prop.tooltip) {\r\n        this.prop.tooltip = this.psv.tooltip.create({\r\n          top    : e.cursor.clientY,\r\n          left   : e.cursor.clientX,\r\n          content: time,\r\n        });\r\n      }\r\n      else {\r\n        this.prop.tooltip.content.innerHTML = time;\r\n        this.prop.tooltip.move({\r\n          top : e.cursor.clientY,\r\n          left: e.cursor.clientX,\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.handleElt.style.display = 'none';\r\n\r\n      this.prop.tooltip?.hide();\r\n      delete this.prop.tooltip;\r\n    }\r\n    if (e.click) {\r\n      this.plugin.setProgress(e.value);\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractComponent, CONSTANTS } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport { formatTime } from './utils';\r\n\r\n/**\r\n * @summary Navigation bar video time display\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class TimeCaption extends AbstractComponent {\r\n\r\n  static id = 'videoTime';\r\n  static groupId = 'video';\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-caption psv-video-time');\r\n\r\n    /**\r\n     * @member {HTMLElement}\r\n     * @readonly\r\n     * @private\r\n     */\r\n    this.content = document.createElement('div');\r\n    this.content.className = 'psv-caption-content';\r\n    this.container.appendChild(this.content);\r\n\r\n    /**\r\n     * @type {PSV.plugins.VideoPlugin}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.plugin = this.psv.getPlugin('video');\r\n\r\n    if (this.plugin) {\r\n      this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n      this.plugin.on(EVENTS.PROGRESS, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    if (this.plugin) {\r\n      this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n      this.plugin.off(EVENTS.PROGRESS, this);\r\n    }\r\n\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.PANORAMA_LOADED:\r\n      case EVENTS.PROGRESS:\r\n        this.content.innerHTML = `<strong>${formatTime(this.plugin.getTime())}</strong> / ${formatTime(this.plugin.getDuration())}`;\r\n        break;\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n}\r\n","import { AbstractButton, CONSTANTS, utils } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport volumeIcon from './volume.svg';\r\n\r\n/**\r\n * @summary Navigation bar video volume button\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class VolumeButton extends AbstractButton {\r\n\r\n  static id = 'videoVolume';\r\n  static groupId = 'video';\r\n  static icon = volumeIcon;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-video-volume-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.VideoPlugin}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.plugin = this.psv.getPlugin('video');\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.rangeContainer = document.createElement('div');\r\n    this.rangeContainer.className = 'psv-video-volume__container';\r\n    this.container.appendChild(this.rangeContainer);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.range = document.createElement('div');\r\n    this.range.className = 'psv-video-volume__range';\r\n    this.rangeContainer.appendChild(this.range);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.trackElt = document.createElement('div');\r\n    this.trackElt.className = 'psv-video-volume__track';\r\n    this.range.appendChild(this.trackElt);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.progressElt = document.createElement('div');\r\n    this.progressElt.className = 'psv-video-volume__progress';\r\n    this.range.appendChild(this.progressElt);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.handleElt = document.createElement('div');\r\n    this.handleElt.className = 'psv-video-volume__handle';\r\n    this.range.appendChild(this.handleElt);\r\n\r\n    /**\r\n     * @type {PSV.utils.Slider}\r\n     * @private\r\n     * @readonly\r\n     */\r\n    this.slider = new utils.Slider({\r\n      psv      : this.psv,\r\n      container: this.range,\r\n      direction: utils.Slider.VERTICAL,\r\n      onUpdate : e => this.__onSliderUpdate(e),\r\n    });\r\n\r\n    if (this.plugin) {\r\n      this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n      this.plugin.on(EVENTS.PLAY, this);\r\n      this.plugin.on(EVENTS.VOLUME_CHANGE, this);\r\n\r\n      this.__setVolume(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    if (this.plugin) {\r\n      this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n      this.plugin.off(EVENTS.PLAY, this);\r\n      this.plugin.off(EVENTS.VOLUME_CHANGE, this);\r\n    }\r\n\r\n    this.slider.destroy();\r\n\r\n    delete this.plugin;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !!this.plugin;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.PANORAMA_LOADED:\r\n      case EVENTS.PLAY:\r\n      case EVENTS.VOLUME_CHANGE:\r\n        this.__setVolume(this.plugin.getVolume());\r\n        break;\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles video muted\r\n   */\r\n  onClick() {\r\n    this.plugin.setMute();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onSliderUpdate(e) {\r\n    if (e.mousedown) {\r\n      this.plugin.setVolume(e.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __setVolume(volume) {\r\n    let level;\r\n    if (volume === 0) level = 0;\r\n    else if (volume < 0.333) level = 1;\r\n    else if (volume < 0.666) level = 2;\r\n    else level = 3;\r\n\r\n    utils.toggleClass(this.container, 'psv-video-volume-button--0', level === 0);\r\n    utils.toggleClass(this.container, 'psv-video-volume-button--1', level === 1);\r\n    utils.toggleClass(this.container, 'psv-video-volume-button--2', level === 2);\r\n    utils.toggleClass(this.container, 'psv-video-volume-button--3', level === 3);\r\n\r\n    this.handleElt.style.bottom = `${volume * 100}%`;\r\n    this.progressElt.style.height = `${volume * 100}%`;\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError, registerButton, utils } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport { PauseOverlay } from './PauseOverlay';\r\nimport { PlayPauseButton } from './PlayPauseButton';\r\nimport { ProgressBar } from './ProgressBar';\r\nimport { TimeCaption } from './TimeCaption';\r\nimport { VolumeButton } from './VolumeButton';\r\nimport './style.scss';\r\n\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VideoPlugin.Keypoint\r\n * @property {PSV.ExtendedPosition} position\r\n * @property {number} time\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VideoPlugin.Options\r\n * @property {boolean} [progressbar=true] - displays a progressbar on top of the navbar\r\n * @property {boolean} [bigbutton=true] - displays a big \"play\" button in the center of the viewer\r\n * @property {PSV.plugins.VideoPlugin.Keypoint[]} [keypoints] - defines autorotate timed keypoints\r\n */\r\n\r\n\r\n// add video buttons\r\nDEFAULTS.lang[PlayPauseButton.id] = 'Play/Pause';\r\nDEFAULTS.lang[VolumeButton.id] = 'Volume';\r\nregisterButton(PlayPauseButton);\r\nregisterButton(VolumeButton);\r\nregisterButton(TimeCaption);\r\nDEFAULTS.navbar.unshift(PlayPauseButton.groupId);\r\n\r\n\r\nexport { EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * @summary Controls a video adapter\r\n * @extends PSV.plugins.AbstractPlugin\r\n * @memberof PSV.plugins\r\n */\r\nexport class VideoPlugin extends AbstractPlugin {\r\n\r\n  static id = 'video';\r\n\r\n  static EVENTS = EVENTS;\r\n\r\n  /**\r\n   * @param {PSV.Viewer} psv\r\n   * @param {PSV.plugins.VideoPlugin.Options} options\r\n   */\r\n  constructor(psv, options) {\r\n    super(psv);\r\n\r\n    if (!this.psv.adapter.constructor.id.includes('video')) {\r\n      throw new PSVError('VideoPlugin can only be used with a video adapter.');\r\n    }\r\n\r\n    /**\r\n     * @member {Object}\r\n     * @property {THREE.SplineCurve} curve\r\n     * @property {PSV.plugins.VideoPlugin.Keypoint} start\r\n     * @property {PSV.plugins.VideoPlugin.Keypoint} end\r\n     * @property {PSV.plugins.VideoPlugin.Keypoint[]} keypoints\r\n     * @private\r\n     */\r\n    this.autorotate = {\r\n      curve    : null,\r\n      start    : null,\r\n      end      : null,\r\n      keypoints: null,\r\n    };\r\n\r\n    /**\r\n     * @member {PSV.plugins.VideoPlugin.Options}\r\n     * @private\r\n     */\r\n    this.config = {\r\n      progressbar: true,\r\n      bigbutton  : true,\r\n      ...options,\r\n    };\r\n\r\n    if (this.config.progressbar) {\r\n      this.progressbar = new ProgressBar(this);\r\n    }\r\n\r\n    if (this.config.bigbutton) {\r\n      this.overlay = new PauseOverlay(this);\r\n    }\r\n\r\n    /**\r\n     * @type {PSV.plugins.MarkersPlugin}\r\n     * @private\r\n     */\r\n    this.markers = null;\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  init() {\r\n    super.init();\r\n\r\n    this.markers = this.psv.getPlugin('markers');\r\n\r\n    if (this.config.keypoints) {\r\n      this.setKeypoints(this.config.keypoints);\r\n      delete this.config.keypoints;\r\n    }\r\n\r\n    this.psv.on(CONSTANTS.EVENTS.AUTOROTATE, this);\r\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\r\n    this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.psv.on(CONSTANTS.EVENTS.KEY_PRESS, this);\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.AUTOROTATE, this);\r\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\r\n    this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\r\n    this.psv.off(CONSTANTS.EVENTS.KEY_PRESS, this);\r\n\r\n    delete this.autorotate;\r\n    delete this.progressbar;\r\n    delete this.overlay;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    // @formatter:off\r\n    switch (e.type) {\r\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\r\n        this.__autorotate();\r\n        break;\r\n      case CONSTANTS.EVENTS.AUTOROTATE:\r\n        this.__configureAutorotate();\r\n        break;\r\n      case CONSTANTS.EVENTS.PANORAMA_LOADED:\r\n        this.__bindVideo(e.args[0]);\r\n        this.progressbar?.show();\r\n        break;\r\n      case CONSTANTS.EVENTS.KEY_PRESS:\r\n        this.__onKeyPress(e, e.args[0]);\r\n        break;\r\n      case 'play':         this.trigger(EVENTS.PLAY); break;\r\n      case 'pause':        this.trigger(EVENTS.PAUSE); break;\r\n      case 'progress':     this.trigger(EVENTS.BUFFER, this.getBufferProgress()); break;\r\n      case 'volumechange': this.trigger(EVENTS.VOLUME_CHANGE, this.getVolume()); break;\r\n      case 'timeupdate':\r\n        this.trigger(EVENTS.PROGRESS, {\r\n          time    : this.getTime(),\r\n          duration: this.getDuration(),\r\n          progress: this.getProgress(),\r\n        });\r\n        break;\r\n    }\r\n    // @formatter:on\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __bindVideo(textureData) {\r\n    this.video = textureData.texture.image;\r\n\r\n    this.video.addEventListener('play', this);\r\n    this.video.addEventListener('pause', this);\r\n    this.video.addEventListener('progress', this);\r\n    this.video.addEventListener('volumechange', this);\r\n    this.video.addEventListener('timeupdate', this);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onKeyPress(e, key) {\r\n    if (key === CONSTANTS.KEY_CODES.Space) {\r\n      this.playPause();\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the durection of the video\r\n   * @returns {number}\r\n   */\r\n  getDuration() {\r\n    return this.video?.duration ?? 0;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the current time of the video\r\n   * @returns {number}\r\n   */\r\n  getTime() {\r\n    return this.video?.currentTime ?? 0;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the play progression of the video\r\n   * @returns {number} 0-1\r\n   */\r\n  getProgress() {\r\n    return this.video ? this.video.currentTime / this.video.duration : 0;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns if the video is playing\r\n   * @returns {boolean}\r\n   */\r\n  isPlaying() {\r\n    return this.video ? !this.video.paused : false;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the video volume\r\n   * @returns {number}\r\n   */\r\n  getVolume() {\r\n    return this.video?.muted ? 0 : this.video?.volume ?? 0;\r\n  }\r\n\r\n  /**\r\n   * @summary Starts or pause the video\r\n   */\r\n  playPause() {\r\n    if (this.video) {\r\n      if (this.video.paused) {\r\n        this.video.play();\r\n      }\r\n      else {\r\n        this.video.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Starts the video if paused\r\n   */\r\n  play() {\r\n    if (this.video && this.video.paused) {\r\n      this.video.play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Pauses the cideo if playing\r\n   */\r\n  pause() {\r\n    if (this.video && !this.video.paused) {\r\n      this.video.pause();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Sets the volume of the video\r\n   * @param {number} volume\r\n   */\r\n  setVolume(volume) {\r\n    if (this.video) {\r\n      this.video.muted = false;\r\n      this.video.volume = volume;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary (Un)mutes the video\r\n   * @param {boolean} [mute] - toggle if undefined\r\n   */\r\n  setMute(mute) {\r\n    if (this.video) {\r\n      this.video.muted = mute === undefined ? !this.video.muted : mute;\r\n      if (!this.video.muted && this.video.volume === 0) {\r\n        this.video.volume = 0.1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the current time of the video\r\n   * @param {number} time\r\n   */\r\n  setTime(time) {\r\n    if (this.video) {\r\n      this.video.currentTime = time;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the progression of the video\r\n   * @param {number} progress 0-1\r\n   */\r\n  setProgress(progress) {\r\n    if (this.video) {\r\n      this.video.currentTime = this.video.duration * progress;\r\n    }\r\n  }\r\n\r\n  getBufferProgress() {\r\n    if (this.video) {\r\n      let maxBuffer = 0;\r\n\r\n      const buffer = this.video.buffered;\r\n\r\n      for (let i = 0, l = buffer.length; i < l; i++) {\r\n        if (buffer.start(i) <= this.video.currentTime && buffer.end(i) >= this.video.currentTime) {\r\n          maxBuffer = buffer.end(i);\r\n          break;\r\n        }\r\n      }\r\n\r\n      return Math.max(this.video.currentTime, maxBuffer) / this.video.duration;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the keypoints\r\n   * @param {PSV.plugins.VideoPlugin.Keypoint[]} keypoints\r\n   */\r\n  setKeypoints(keypoints) {\r\n    if (keypoints && keypoints.length < 2) {\r\n      throw new PSVError('At least two points are required');\r\n    }\r\n\r\n    this.autorotate.keypoints = utils.clone(keypoints);\r\n\r\n    if (this.autorotate.keypoints) {\r\n      this.autorotate.keypoints.forEach((pt, i) => {\r\n        if (pt.position) {\r\n          const position = this.psv.dataHelper.cleanPosition(pt.position);\r\n          pt.position = [position.longitude, position.latitude];\r\n        }\r\n        else {\r\n          throw new PSVError(`Keypoint #${i} is missing marker or position`);\r\n        }\r\n\r\n        if (utils.isNil(pt.time)) {\r\n          throw new PSVError(`Keypoint #${i} is missing time`);\r\n        }\r\n      });\r\n\r\n      this.autorotate.keypoints.sort((a, b) => a.time - b.time);\r\n    }\r\n\r\n    this.__configureAutorotate();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __configureAutorotate() {\r\n    delete this.autorotate.curve;\r\n    delete this.autorotate.start;\r\n    delete this.autorotate.end;\r\n\r\n    if (this.psv.isAutorotateEnabled() && this.autorotate.keypoints) {\r\n      // cancel core rotation\r\n      this.psv.dynamics.position.stop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __autorotate() {\r\n    if (!this.psv.isAutorotateEnabled() || !this.autorotate.keypoints) {\r\n      return;\r\n    }\r\n\r\n    const currentTime = this.getTime();\r\n    const autorotate = this.autorotate;\r\n\r\n    if (!autorotate.curve || currentTime < autorotate.start.time || currentTime >= autorotate.end.time) {\r\n      this.__autorotateNext(currentTime);\r\n    }\r\n\r\n    if (autorotate.start === autorotate.end) {\r\n      this.psv.rotate({\r\n        longitude: autorotate.start.position[0],\r\n        latitude : autorotate.start.position[1],\r\n      });\r\n    }\r\n    else {\r\n      const progress = (currentTime - autorotate.start.time) / (autorotate.end.time - autorotate.start.time);\r\n      // only the middle segment contains the current section\r\n      const pt = autorotate.curve.getPoint(1 / 3 + progress / 3);\r\n\r\n      this.psv.dynamics.position.goto({\r\n        longitude: pt.x,\r\n        latitude : pt.y,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __autorotateNext(currentTime) {\r\n    let k1 = null;\r\n    let k2 = null;\r\n\r\n    const keypoints = this.autorotate.keypoints;\r\n    const l = keypoints.length - 1;\r\n\r\n    if (currentTime < keypoints[0].time) {\r\n      k1 = 0;\r\n      k2 = 0;\r\n    }\r\n    for (let i = 0; i < l; i++) {\r\n      if (currentTime >= keypoints[i].time && currentTime < keypoints[i + 1].time) {\r\n        k1 = i;\r\n        k2 = i + 1;\r\n        break;\r\n      }\r\n    }\r\n    if (currentTime >= keypoints[l].time) {\r\n      k1 = l;\r\n      k2 = l;\r\n    }\r\n\r\n    // get the 4 points necessary to compute the current movement\r\n    // one point before and two points after the current\r\n    const workPoints = [\r\n      keypoints[Math.max(0, k1 - 1)].position,\r\n      keypoints[k1].position,\r\n      keypoints[k2].position,\r\n      keypoints[Math.min(l, k2 + 1)].position,\r\n    ];\r\n\r\n    // apply offsets to avoid crossing the origin\r\n    const workVectors = [new THREE.Vector2(workPoints[0][0], workPoints[0][1])];\r\n\r\n    let k = 0;\r\n    for (let i = 1; i <= 3; i++) {\r\n      const d = workPoints[i - 1][0] - workPoints[i][0];\r\n      if (d > Math.PI) { // crossed the origin left to right\r\n        k += 1;\r\n      }\r\n      else if (d < -Math.PI) { // crossed the origin right to left\r\n        k -= 1;\r\n      }\r\n      if (k !== 0 && i === 1) {\r\n        // do not modify first point, apply the reverse offset the the previous point instead\r\n        workVectors[0].x -= k * 2 * Math.PI;\r\n        k = 0;\r\n      }\r\n      workVectors.push(new THREE.Vector2(workPoints[i][0] + k * 2 * Math.PI, workPoints[i][1]));\r\n    }\r\n\r\n    this.autorotate.curve = new THREE.SplineCurve(workVectors);\r\n    this.autorotate.start = keypoints[k1];\r\n    this.autorotate.end = keypoints[k2];\r\n\r\n    // debugCurve(this.markers, this.autorotate.curve.getPoints(16 * 3).map(p => ([p.x, p.y])), 16);\r\n  }\r\n\r\n}\r\n"],"names":["EVENTS","PLAY","PAUSE","VOLUME_CHANGE","PROGRESS","BUFFER","PauseOverlay","plugin","psv","button","document","createElement","className","innerHTML","playIcon","container","appendChild","on","CONSTANTS","PANORAMA_LOADED","addEventListener","destroy","off","handleEvent","e","type","utils","toggleClass","isPlaying","playPause","AbstractComponent","PlayPauseButton","navbar","getPlugin","isSupported","toggleActive","onClick","AbstractButton","id","groupId","icon","iconActive","pauseIcon","formatTime","time","seconds","Math","round","minutes","slice","ProgressBar","bufferElt","progressElt","handleElt","slider","Slider","direction","HORIZONTAL","onUpdate","__onSliderUpdate","prop","req","window","requestAnimationFrame","__updateProgress","hide","tooltip","cancelAnimationFrame","style","width","getBufferProgress","getProgress","mouseover","display","left","value","getDuration","create","top","cursor","clientY","clientX","content","move","click","setProgress","TimeCaption","getTime","VolumeButton","rangeContainer","range","trackElt","VERTICAL","__setVolume","getVolume","setMute","mousedown","setVolume","volume","level","bottom","height","volumeIcon","DEFAULTS","lang","registerButton","unshift","VideoPlugin","options","adapter","constructor","includes","PSVError","autorotate","curve","start","end","keypoints","config","progressbar","bigbutton","overlay","markers","init","setKeypoints","AUTOROTATE","BEFORE_RENDER","KEY_PRESS","__autorotate","__configureAutorotate","__bindVideo","args","show","__onKeyPress","trigger","duration","progress","textureData","video","texture","image","key","KEY_CODES","Space","preventDefault","currentTime","paused","muted","play","pause","mute","undefined","setTime","maxBuffer","buffer","buffered","i","l","length","max","clone","forEach","pt","position","dataHelper","cleanPosition","longitude","latitude","isNil","sort","a","b","isAutorotateEnabled","dynamics","stop","__autorotateNext","rotate","getPoint","goto","x","y","k1","k2","workPoints","min","workVectors","THREE","Vector2","k","d","PI","push","SplineCurve","AbstractPlugin"],"mappings":"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"}