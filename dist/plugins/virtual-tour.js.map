{"version":3,"file":"virtual-tour.js","sources":["../../src/plugins/virtual-tour/AbstractDatasource.js","../../src/plugins/virtual-tour/utils.js","../../src/plugins/virtual-tour/ClientSideDatasource.js","../../src/plugins/virtual-tour/constants.js","../../src/plugins/virtual-tour/NodesListButton.js","../../src/plugins/virtual-tour/ServerSideDatasource.js","../../src/plugins/virtual-tour/index.js"],"sourcesContent":["import { PSVError } from 'photo-sphere-viewer';\r\n\r\n/**\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @private\r\n */\r\nexport class AbstractDatasource {\r\n\r\n  /**\r\n   * @type {Record<string, PSV.plugins.VirtualTourPlugin.Node>}\r\n   */\r\n  nodes = {};\r\n\r\n  /**\r\n   * @param {PSV.plugins.VirtualTourPlugin} plugin\r\n   */\r\n  constructor(plugin) {\r\n    this.plugin = plugin;\r\n  }\r\n\r\n  destroy() {\r\n    delete this.plugin;\r\n  }\r\n\r\n  /**\r\n   * @summary Loads a node\r\n   * @param {string} nodeId\r\n   * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\r\n   */\r\n  loadNode(nodeId) { // eslint-disable-line no-unused-vars\r\n    throw new PSVError('loadNode not implemented');\r\n  }\r\n\r\n  /**\r\n   * @summary Loades nodes linked to another node\r\n   * @param {string} nodeId\r\n   * @return {Promise<void>}\r\n   */\r\n  loadLinkedNodes(nodeId) { // eslint-disable-line no-unused-vars\r\n    throw new PSVError('loadLinkedNodes not implemented');\r\n  }\r\n\r\n}\r\n","import { PSVError, utils } from 'photo-sphere-viewer';\r\n\r\n/**\r\n * @summary Checks the configuration of a node\r\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n * @param {boolean} isGps\r\n * @private\r\n */\r\nexport function checkNode(node, isGps) {\r\n  if (!node.id) {\r\n    throw new PSVError('No id given for node');\r\n  }\r\n  if (!node.panorama) {\r\n    throw new PSVError(`No panorama provided for node ${node.id}`);\r\n  }\r\n  if (isGps && !(node.position?.length >= 2)) {\r\n    throw new PSVError(`No position provided for node ${node.id}`);\r\n  }\r\n}\r\n\r\n/**\r\n * @summary Checks the configuration of a link\r\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\r\n * @param {boolean} isGps\r\n * @private\r\n */\r\nexport function checkLink(node, link, isGps) {\r\n  if (!link.nodeId) {\r\n    throw new PSVError(`Link of node ${node.id} has no target id`);\r\n  }\r\n  if (!isGps && !utils.isExtendedPosition(link)) {\r\n    throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\r\n  }\r\n}\r\n\r\n/**\r\n * @summary Changes the color of a mesh\r\n * @param {external:THREE.Mesh} mesh\r\n * @param {*} color\r\n * @private\r\n */\r\nexport function setMeshColor(mesh, color) {\r\n  mesh.material.color.set(color);\r\n}\r\n\r\n/**\r\n * @summary Returns the distance between two GPS points\r\n * @param {number[]} p1\r\n * @param {number[]} p2\r\n * @return {number}\r\n * @private\r\n */\r\nexport function distance(p1, p2) {\r\n  return utils.greatArcDistance(p1, p2) * 6371e3;\r\n}\r\n\r\n/**\r\n * @summary Returns the bearing between two GPS points\r\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\r\n * @param {number[]} p1\r\n * @param {number[]} p2\r\n * @return {number}\r\n * @private\r\n */\r\nexport function bearing(p1, p2) {\r\n  const [λ1, φ1] = p1;\r\n  const [λ2, φ2] = p2;\r\n\r\n  const y = Math.sin(λ2 - λ1) * Math.cos(φ2);\r\n  const x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(λ2 - λ1);\r\n  return Math.atan2(y, x);\r\n}\r\n","import { PSVError, utils } from 'photo-sphere-viewer';\r\nimport { AbstractDatasource } from './AbstractDatasource';\r\nimport { checkLink, checkNode } from './utils';\r\n\r\n/**\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @private\r\n */\r\nexport class ClientSideDatasource extends AbstractDatasource {\r\n\r\n  loadNode(nodeId) {\r\n    if (this.nodes[nodeId]) {\r\n      return Promise.resolve(this.nodes[nodeId]);\r\n    }\r\n    else {\r\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\r\n    }\r\n  }\r\n\r\n  loadLinkedNodes(nodeId) {\r\n    if (!this.nodes[nodeId]) {\r\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\r\n    }\r\n    else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  setNodes(rawNodes) {\r\n    if (!rawNodes?.length) {\r\n      throw new PSVError('No nodes provided');\r\n    }\r\n\r\n    const nodes = {};\r\n    const linkedNodes = {};\r\n\r\n    rawNodes.forEach((node) => {\r\n      checkNode(node, this.plugin.isGps());\r\n\r\n      if (nodes[node.id]) {\r\n        throw new PSVError(`Duplicate node ${node.id}`);\r\n      }\r\n      if (!node.links) {\r\n        utils.logWarn(`Node ${node.id} has no links`);\r\n        nodes.links = [];\r\n      }\r\n\r\n      nodes[node.id] = node;\r\n    });\r\n\r\n    rawNodes.forEach((node) => {\r\n      node.links.forEach((link) => {\r\n        checkLink(node, link, this.plugin.isGps());\r\n\r\n        if (!nodes[link.nodeId]) {\r\n          throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\r\n        }\r\n\r\n        // copy essential data\r\n        link.position = link.position || nodes[link.nodeId].position;\r\n        link.name = link.name || nodes[link.nodeId].name;\r\n\r\n        linkedNodes[link.nodeId] = true;\r\n      });\r\n    });\r\n\r\n    rawNodes.forEach((node) => {\r\n      if (!linkedNodes[node.id]) {\r\n        utils.logWarn(`Node ${node.id} is never linked to`);\r\n      }\r\n    });\r\n\r\n    this.nodes = nodes;\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport arrowGeometryJson from './arrow.json';\r\nimport arrowIconSvg from './arrow.svg';\r\nimport arrowOutlineGeometryJson from './arrow_outline.json';\r\nimport nodesList from './nodes-list.svg';\r\n\r\n/**\r\n * @summary In client mode all the nodes are provided in the config or with the `setNodes` method\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_CLIENT = 'client';\r\n\r\n/**\r\n * @summary In server mode the nodes are fetched asynchronously\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_SERVER = 'server';\r\n\r\n/**\r\n * @summary In manual mode each link is positionned manually on the panorama\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_MANUAL = 'manual';\r\n\r\n/**\r\n * @summary In GPS mode each node is globally positionned and the links are automatically computed\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_GPS = 'gps';\r\n\r\n/**\r\n * @summaru In markers mode the links are represented using markers\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_MARKERS = 'markers';\r\n\r\n/**\r\n * @summaru In 3D mode the links are represented using 3d arrows\r\n * @type {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const MODE_3D = '3d';\r\n\r\n/**\r\n * @summary Available events\r\n * @enum {string}\r\n * @memberof PSV.plugins.VirtualTourPlugin\r\n * @constant\r\n */\r\nexport const EVENTS = {\r\n  /**\r\n   * @event node-changed\r\n   * @memberof PSV.plugins.VirtualTourPlugin\r\n   * @summary Triggered when the current node changes\r\n   * @param {string} nodeId\r\n   */\r\n  NODE_CHANGED     : 'node-changed',\r\n  /**\r\n   * @event filter:render-nodes-list\r\n   * @memberof PSV.plugins.VirtualTourPlugin\r\n   * @summary Used to alter the list of nodes displayed on the side-panel\r\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\r\n   * @returns {PSV.plugins.VirtualTourPlugin.Node[]}\r\n   */\r\n  RENDER_NODES_LIST: 'render-nodes-list',\r\n};\r\n\r\n/**\r\n * @summary Property name added to markers\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const LINK_DATA = 'tourLink';\r\n\r\n/**\r\n * @summary Default style of the link marker\r\n * @type {PSV.plugins.MarkersPlugin.Properties}\r\n * @constant\r\n * @private\r\n */\r\nexport const DEFAULT_MARKER = {\r\n  html     : arrowIconSvg,\r\n  width    : 80,\r\n  height   : 80,\r\n  scale    : [0.5, 2],\r\n  anchor   : 'top center',\r\n  className: 'psv-virtual-tour__marker',\r\n  style    : {\r\n    color: 'rgba(0, 208, 255, 0.8)',\r\n  },\r\n};\r\n\r\n/**\r\n * @summary Default style of the link arrow\r\n * @type {PSV.plugins.VirtualTourPlugin.ArrowStyle}\r\n * @constant\r\n * @private\r\n */\r\nexport const DEFAULT_ARROW = {\r\n  color       : 0xaaaaaa,\r\n  hoverColor  : 0xaa5500,\r\n  outlineColor: 0x000000,\r\n  scale       : [0.5, 2],\r\n};\r\n\r\n/**\r\n * @type {external:THREE.BufferedGeometry}\r\n * @constant\r\n * @private\r\n */\r\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\r\n  const loader = new THREE.ObjectLoader();\r\n  const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\r\n  const arrow = geometries[arrowGeometryJson.uuid];\r\n  const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\r\n  const scale = 0.015;\r\n  const rot = Math.PI / 2;\r\n  arrow.scale(scale, scale, scale);\r\n  arrow.rotateX(rot);\r\n  arrowOutline.scale(scale, scale, scale);\r\n  arrowOutline.rotateX(rot);\r\n  return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\r\n})();\r\n\r\n/**\r\n * @summary Panel identifier for nodes list\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const ID_PANEL_NODES_LIST = 'virtualTourNodesList';\r\n\r\n/**\r\n * @summary Nodes list template\r\n * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\r\n * @param {string} title\r\n * @param {string} currentNodeId\r\n * @returns {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const NODES_LIST_TEMPLATE = (nodes, title, currentNodeId) => `\r\n<div class=\"psv-panel-menu psv-panel-menu--stripped psv-virtual-tour__menu\">\r\n  <h1 class=\"psv-panel-menu-title\">${nodesList} ${title}</h1>\r\n  <ul class=\"psv-panel-menu-list\">\r\n    ${nodes.map(node => `\r\n    <li data-node-id=\"${node.id}\" tabindex=\"0\"\r\n        class=\"psv-panel-menu-item ${currentNodeId === node.id ? 'psv-panel-menu-item--active' : ''}\">\r\n      ${node.thumbnail ? `<span class=\"psv-panel-menu-item-icon\"><img src=\"${node.thumbnail}\"/></span>` : ''}\r\n      <span class=\"psv-panel-menu-item-label\">${node.caption || node.name}</span>\r\n    </li>\r\n    `).join('')}\r\n  </ul>\r\n</div>\r\n`;\r\n","import { AbstractButton, CONSTANTS } from '../..';\r\nimport { ID_PANEL_NODES_LIST } from './constants';\r\nimport nodesList from './nodes-list.svg';\r\n\r\n/**\r\n * @summary Navigation bar markers list button class\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class NodesListButton extends AbstractButton {\r\n\r\n  static id = 'nodesList';\r\n  static icon = nodesList;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-nodes-list-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.VirtualTourPlugin}\r\n     */\r\n    this.plugin = this.psv.getPlugin('virtual-tour');\r\n\r\n    if (this.plugin) {\r\n      this.psv.on(CONSTANTS.EVENTS.OPEN_PANEL, this);\r\n      this.psv.on(CONSTANTS.EVENTS.CLOSE_PANEL, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.OPEN_PANEL, this);\r\n    this.psv.off(CONSTANTS.EVENTS.CLOSE_PANEL, this);\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !!this.plugin && !this.plugin.isServerSide() && !this.plugin.gallery;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      // @formatter:off\r\n      case CONSTANTS.EVENTS.OPEN_PANEL:  this.toggleActive(e.args[0] === ID_PANEL_NODES_LIST); break;\r\n      case CONSTANTS.EVENTS.CLOSE_PANEL: this.toggleActive(false); break;\r\n      // @formatter:on\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles nodes list\r\n   */\r\n  onClick() {\r\n    this.plugin.toggleNodesList();\r\n  }\r\n\r\n}\r\n","import { PSVError, utils } from 'photo-sphere-viewer';\r\nimport { AbstractDatasource } from './AbstractDatasource';\r\nimport { checkLink, checkNode } from './utils';\r\n\r\n/**\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @private\r\n */\r\nexport class ServerSideDatasource extends AbstractDatasource {\r\n\r\n  constructor(plugin) {\r\n    super(plugin);\r\n\r\n    if (!plugin.config.getNode) {\r\n      throw new PSVError('Missing getNode() option.');\r\n    }\r\n\r\n    this.nodeResolver = plugin.config.getNode;\r\n    this.linksResolver = plugin.config.getLinks;\r\n  }\r\n\r\n  loadNode(nodeId) {\r\n    if (this.nodes[nodeId]) {\r\n      return Promise.resolve(this.nodes[nodeId]);\r\n    }\r\n    else {\r\n      return Promise.resolve(this.nodeResolver(nodeId))\r\n        .then((node) => {\r\n          checkNode(node, this.plugin.isGps());\r\n          this.nodes[nodeId] = node;\r\n          return node;\r\n        });\r\n    }\r\n  }\r\n\r\n  loadLinkedNodes(nodeId) {\r\n    if (!this.nodes[nodeId]) {\r\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\r\n    }\r\n    else if (this.nodes[nodeId].links) {\r\n      return Promise.resolve();\r\n    }\r\n    else {\r\n      if (!this.linksResolver) {\r\n        this.nodes[nodeId].links = [];\r\n        return Promise.resolve();\r\n      }\r\n\r\n      utils.logWarn(`getLinks() option is deprecated, instead make getNode() also return the node' links.`);\r\n\r\n      return Promise.resolve(this.linksResolver(nodeId))\r\n        .then(links => links || [])\r\n        .then((links) => {\r\n          const node = this.nodes[nodeId];\r\n\r\n          links.forEach((link) => {\r\n            checkLink(node, link, this.plugin.isGps());\r\n\r\n            // copy essential data\r\n            if (this.nodes[link.nodeId]) {\r\n              link.position = link.position || this.nodes[link.nodeId].position;\r\n              link.name = link.name || this.nodes[link.nodeId].name;\r\n            }\r\n\r\n            if (this.plugin.isGps() && !link.position) {\r\n              throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\r\n            }\r\n          });\r\n\r\n          // store links\r\n          node.links = links;\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError, registerButton, utils } from '../..';\r\nimport { ClientSideDatasource } from './ClientSideDatasource';\r\nimport {\r\n  ARROW_GEOM,\r\n  ARROW_OUTLINE_GEOM,\r\n  DEFAULT_ARROW,\r\n  DEFAULT_MARKER,\r\n  EVENTS,\r\n  ID_PANEL_NODES_LIST,\r\n  LINK_DATA,\r\n  MODE_3D,\r\n  MODE_CLIENT,\r\n  MODE_GPS,\r\n  MODE_MANUAL,\r\n  MODE_MARKERS,\r\n  MODE_SERVER,\r\n  NODES_LIST_TEMPLATE\r\n} from './constants';\r\nimport { NodesListButton } from './NodesListButton';\r\nimport { ServerSideDatasource } from './ServerSideDatasource';\r\nimport './style.scss';\r\nimport { bearing, distance, setMeshColor } from './utils';\r\n\r\n\r\n/**\r\n * @callback GetNode\r\n * @summary Function to load a node\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @param {string} nodeId\r\n * @returns {PSV.plugins.VirtualTourPlugin.Node|Promise<PSV.plugins.VirtualTourPlugin.Node>}\r\n */\r\n\r\n/**\r\n * @callback GetLinks\r\n * @summary Function to load the links of a node\r\n * @deprecated `getNode` must directly return the links of each node\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @param {string} nodeId\r\n * @returns {PSV.plugins.VirtualTourPlugin.NodeLink[]|Promise<PSV.plugins.VirtualTourPlugin.NodeLink[]>}\r\n */\r\n\r\n/**\r\n * @callback Preload\r\n * @summary Function to determine if a link must be preloaded\r\n * @memberOf PSV.plugins.VirtualTourPlugin\r\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\r\n * @returns {boolean}\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Node\r\n * @summary Definition of a single node in the tour\r\n * @property {string} id - unique identifier of the node\r\n * @property {*} panorama\r\n * @property {PSV.plugins.VirtualTourPlugin.NodeLink[]} [links] - links to other nodes\r\n * @property {number[]} [position] - GPS position (longitude, latitude, optional altitude)\r\n * @property {PSV.PanoData | PSV.PanoDataProvider} [panoData] - data used for this panorama\r\n * @property {PSV.SphereCorrection} [sphereCorrection] - sphere correction to apply to this panorama\r\n * @property {string} [name] - short name of the node\r\n * @property {string} [caption] - caption visible in the navbar\r\n * @property {string} [description] - description visible in the side panel\r\n * @property {string} [thumbnail] - thumbnail for the nodes list in the side panel\r\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers] - additional markers to use on this node\r\n */\r\n\r\n/**\r\n * @typedef {PSV.ExtendedPosition} PSV.plugins.VirtualTourPlugin.NodeLink\r\n * @summary Definition of a link between two nodes\r\n * @property {string} nodeId - identifier of the target node\r\n * @property {string} [name] - override the name of the node (tooltip)\r\n * @property {number[]} [position] - override the GPS position of the node\r\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - override global marker style\r\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - override global arrow style\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.ArrowStyle\r\n * @summary Style of the arrow in 3D mode\r\n * @property {string} [color=0xaaaaaa]\r\n * @property {string} [hoverColor=0xaa5500]\r\n * @property {number} [outlineColor=0x000000]\r\n * @property {number[]} [scale=[0.5,2]]\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Options\r\n * @property {'client'|'server'} [dataMode='client'] - configure data mode\r\n * @property {'manual'|'gps'} [positionMode='manual'] - configure positioning mode\r\n * @property {'markers'|'3d'} [renderMode='3d'] - configure rendering mode of links\r\n * @property {PSV.plugins.VirtualTourPlugin.Node[]} [nodes] - initial nodes\r\n * @property {PSV.plugins.VirtualTourPlugin.GetNode} [getNode]\r\n * @property {PSV.plugins.VirtualTourPlugin.GetLinks} [getLinks] - Deprecated: `getNode` must directly return the links of each node\r\n * @property {string} [startNodeId] - id of the initial node, if not defined the first node will be used\r\n * @property {boolean|PSV.plugins.VirtualTourPlugin.Preload} [preload=false] - preload linked panoramas\r\n * @property {boolean|string|number} [rotateSpeed='20rpm'] - speed of rotation when clicking on a link, if 'false' the viewer won't rotate at all\r\n * @property {boolean|number} [transition=1500] - duration of the transition between nodes\r\n * @property {boolean} [linksOnCompass] - if the Compass plugin is enabled, displays the links on the compass, defaults to `true` on in markers render mode\r\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - global marker style\r\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - global arrow style\r\n * @property {number} [markerLatOffset=-0.1] - (GPS & Markers mode) latitude offset applied to link markers, to compensate for viewer height\r\n * @property {'top'|'bottom'} [arrowPosition='bottom'] - (3D mode) arrows vertical position\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.NodeChangedData\r\n * @summary Data associated to the \"node-changed\" event\r\n * @type {PSV.plugins.VirtualTourPlugin.Node} [fromNode] - The previous node\r\n * @type {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink] - The link that was clicked in the previous node\r\n * @type {PSV.Position} [fromLinkPosition] - The position of the link on the previous node\r\n */\r\n\r\n// add markers buttons\r\nDEFAULTS.lang[NodesListButton.id] = 'Locations';\r\nregisterButton(NodesListButton, 'caption:left');\r\n\r\n\r\nexport { EVENTS, MODE_3D, MODE_CLIENT, MODE_GPS, MODE_MANUAL, MODE_MARKERS, MODE_SERVER } from './constants';\r\n\r\n\r\n/**\r\n * @summary Create virtual tours by linking multiple panoramas\r\n * @extends PSV.plugins.AbstractPlugin\r\n * @memberof PSV.plugins\r\n */\r\nexport class VirtualTourPlugin extends AbstractPlugin {\r\n\r\n  static id = 'virtual-tour';\r\n\r\n  static EVENTS = EVENTS;\r\n  static MODE_CLIENT = MODE_CLIENT;\r\n  static MODE_SERVER = MODE_SERVER;\r\n  static MODE_3D = MODE_3D;\r\n  static MODE_MARKERS = MODE_MARKERS;\r\n  static MODE_MANUAL = MODE_MANUAL;\r\n  static MODE_GPS = MODE_GPS;\r\n\r\n  /**\r\n   * @param {PSV.Viewer} psv\r\n   * @param {PSV.plugins.VirtualTourPlugin.Options} [options]\r\n   */\r\n  constructor(psv, options) {\r\n    super(psv);\r\n\r\n    /**\r\n     * @member {Object}\r\n     * @property {PSV.plugins.VirtualTourPlugin.Node} currentNode\r\n     * @property {PSV.Tooltip} currentTooltip\r\n     * @property {string} loadingNode\r\n     * @property {function} stopObserver\r\n     * @private\r\n     */\r\n    this.prop = {\r\n      currentNode   : null,\r\n      currentTooltip: null,\r\n      loadingNode   : null,\r\n      stopObserver  : null,\r\n    };\r\n\r\n    /**\r\n     * @type {Record<string, boolean | Promise>}\r\n     * @private\r\n     */\r\n    this.preload = {};\r\n\r\n    /**\r\n     * @member {PSV.plugins.VirtualTourPlugin.Options}\r\n     * @private\r\n     */\r\n    this.config = {\r\n      dataMode       : MODE_CLIENT,\r\n      positionMode   : MODE_MANUAL,\r\n      renderMode     : MODE_3D,\r\n      preload        : false,\r\n      rotateSpeed    : '20rpm',\r\n      transition     : CONSTANTS.DEFAULT_TRANSITION,\r\n      markerLatOffset: -0.1,\r\n      arrowPosition  : 'bottom',\r\n      linksOnCompass : options?.renderMode === MODE_MARKERS,\r\n      ...options,\r\n      markerStyle    : {\r\n        ...DEFAULT_MARKER,\r\n        ...options?.markerStyle,\r\n      },\r\n      arrowStyle     : {\r\n        ...DEFAULT_ARROW,\r\n        ...options?.arrowStyle,\r\n      },\r\n    };\r\n\r\n    if (options?.listButton === false) {\r\n      utils.logWarn('VirtualTourPlugin: listButton option is deprecated. '\r\n        + 'Please define the global navbar options according to your needs.');\r\n    }\r\n    if (options?.listButton === true && this.config.dataMode === MODE_SERVER) {\r\n      utils.logWarn('VirtualTourPlugin: the list button is not supported in server mode.');\r\n    }\r\n\r\n    /**\r\n     * @type {PSV.plugins.MarkersPlugin}\r\n     * @private\r\n     */\r\n    this.markers = null;\r\n\r\n    /**\r\n     * @type {PSV.plugins.CompassPlugin}\r\n     * @private\r\n     */\r\n    this.compass = null;\r\n\r\n    /**\r\n     * @type {PSV.plugins.GalleryPlugin}\r\n     * @private\r\n     */\r\n    this.gallery = null;\r\n\r\n    /**\r\n     * @type {PSV.plugins.VirtualTourPlugin.AbstractDatasource}\r\n     */\r\n    this.datasource = null;\r\n\r\n    /**\r\n     * @type {external:THREE.Group}\r\n     * @private\r\n     */\r\n    this.arrowsGroup = null;\r\n\r\n    if (this.is3D()) {\r\n      this.arrowsGroup = new THREE.Group();\r\n\r\n      const localLight = new THREE.PointLight(0xffffff, 1, 0);\r\n      localLight.position.set(0, this.config.arrowPosition === 'bottom' ? 2 : -2, 0);\r\n      this.arrowsGroup.add(localLight);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  init() {\r\n    super.init();\r\n\r\n    this.markers = this.psv.getPlugin('markers');\r\n    this.compass = this.psv.getPlugin('compass');\r\n    this.gallery = this.psv.getPlugin('gallery');\r\n\r\n    if (!this.is3D() && !this.markers) {\r\n      throw new PSVError('Tour plugin requires the Markers plugin in markers mode');\r\n    }\r\n\r\n    this.datasource = this.isServerSide() ? new ServerSideDatasource(this) : new ClientSideDatasource(this);\r\n\r\n    if (this.is3D()) {\r\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\r\n        this.__positionArrows();\r\n        this.psv.renderer.scene.add(this.arrowsGroup);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xffffff, 1);\r\n        this.psv.renderer.scene.add(ambientLight);\r\n\r\n        this.psv.needsUpdate();\r\n      });\r\n\r\n      this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\r\n      this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\r\n      this.psv.on(CONSTANTS.EVENTS.CLICK, this);\r\n      this.prop.stopObserver = this.psv.observeObjects(LINK_DATA, this);\r\n    }\r\n    else {\r\n      this.markers.on('select-marker', this);\r\n    }\r\n\r\n    if (this.isServerSide()) {\r\n      if (this.config.startNodeId) {\r\n        this.setCurrentNode(this.config.startNodeId);\r\n      }\r\n    }\r\n    else if (this.config.nodes) {\r\n      this.setNodes(this.config.nodes, this.config.startNodeId);\r\n      delete this.config.nodes;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  destroy() {\r\n    if (this.markers) {\r\n      this.markers.off('select-marker', this);\r\n    }\r\n    if (this.arrowsGroup) {\r\n      this.psv.renderer.scene.remove(this.arrowsGroup);\r\n    }\r\n\r\n    this.psv.off(CONSTANTS.EVENTS.POSITION_UPDATED, this);\r\n    this.psv.off(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\r\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\r\n    this.prop.stopObserver?.();\r\n\r\n    this.datasource.destroy();\r\n\r\n    delete this.preload;\r\n    delete this.datasource;\r\n    delete this.markers;\r\n    delete this.compass;\r\n    delete this.gallery;\r\n    delete this.arrowsGroup;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  handleEvent(e) {\r\n    let link;\r\n    switch (e.type) {\r\n      case 'select-marker':\r\n        link = e.args[0].data?.[LINK_DATA];\r\n        if (link) {\r\n          this.setCurrentNode(link.nodeId, link);\r\n        }\r\n        break;\r\n\r\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\r\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\r\n        if (this.arrowsGroup) {\r\n          this.__positionArrows();\r\n        }\r\n        break;\r\n\r\n      case CONSTANTS.EVENTS.CLICK:\r\n        link = e.args[0].objects.find(o => o.userData[LINK_DATA])?.userData[LINK_DATA];\r\n        if (link) {\r\n          this.setCurrentNode(link.nodeId, link);\r\n        }\r\n        break;\r\n\r\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT:\r\n        this.__onEnterObject(e.detail.object, e.detail.viewerPoint);\r\n        break;\r\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT:\r\n        this.__onHoverObject(e.detail.object, e.detail.viewerPoint);\r\n        break;\r\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT:\r\n        this.__onLeaveObject(e.detail.object);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Tests if running in server mode\r\n   * @return {boolean}\r\n   */\r\n  isServerSide() {\r\n    return this.config.dataMode === MODE_SERVER;\r\n  }\r\n\r\n  /**\r\n   * @summary Tests if running in GPS mode\r\n   * @return {boolean}\r\n   */\r\n  isGps() {\r\n    return this.config.positionMode === MODE_GPS;\r\n  }\r\n\r\n  /**\r\n   * @summary Tests if running in 3D mode\r\n   * @return {boolean}\r\n   */\r\n  is3D() {\r\n    return this.config.renderMode === MODE_3D;\r\n  }\r\n\r\n  /**\r\n   * @summary Sets the nodes (client mode only)\r\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\r\n   * @param {string} [startNodeId]\r\n   * @throws {PSV.PSVError} when the configuration is incorrect\r\n   */\r\n  setNodes(nodes, startNodeId) {\r\n    if (this.isServerSide()) {\r\n      throw new PSVError('Cannot set nodes in server side mode');\r\n    }\r\n\r\n    this.datasource.setNodes(nodes);\r\n\r\n    if (!startNodeId) {\r\n      startNodeId = nodes[0].id;\r\n    }\r\n    else if (!this.datasource.nodes[startNodeId]) {\r\n      startNodeId = nodes[0].id;\r\n      utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\r\n    }\r\n\r\n    this.setCurrentNode(startNodeId);\r\n\r\n    if (this.gallery) {\r\n      this.gallery.setItems(\r\n        nodes.map(node => ({\r\n          id       : node.id,\r\n          panorama : node.panorama,\r\n          name     : node.name,\r\n          thumbnail: node.thumbnail,\r\n          options  : {\r\n            caption         : node.caption,\r\n            panoData        : node.panoData,\r\n            sphereCorrection: node.sphereCorrection,\r\n            description     : node.description,\r\n          },\r\n        })),\r\n        id => this.setCurrentNode(id)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the current node\r\n   * @param {string} nodeId\r\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink]\r\n   * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\r\n   */\r\n  setCurrentNode(nodeId, fromLink = null) {\r\n    if (nodeId === this.prop.currentNode?.id) {\r\n      return Promise.resolve(true);\r\n    }\r\n\r\n    this.psv.hideError();\r\n\r\n    this.prop.loadingNode = nodeId;\r\n\r\n    const fromNode = this.prop.currentNode;\r\n    const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\r\n\r\n    return Promise.all([\r\n      // if this node is already preloading, wait for it\r\n      Promise.resolve(this.preload[nodeId])\r\n        .then(() => {\r\n          if (this.prop.loadingNode !== nodeId) {\r\n            throw utils.getAbortError();\r\n          }\r\n\r\n          return this.datasource.loadNode(nodeId);\r\n        }),\r\n      Promise.resolve(fromLinkPosition ? this.config.rotateSpeed : false)\r\n        .then((speed) => { // eslint-disable-line consistent-return\r\n          if (speed) {\r\n            return this.psv.animate({ ...fromLinkPosition, speed });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.psv.loader.show();\r\n        }),\r\n    ])\r\n      .then(([node]) => {\r\n        if (this.prop.loadingNode !== nodeId) {\r\n          throw utils.getAbortError();\r\n        }\r\n\r\n        this.prop.currentNode = node;\r\n\r\n        if (this.prop.currentTooltip) {\r\n          this.prop.currentTooltip.hide();\r\n          this.prop.currentTooltip = null;\r\n        }\r\n\r\n        if (this.is3D()) {\r\n          this.arrowsGroup.remove(...this.arrowsGroup.children.filter(o => o.type === 'Mesh'));\r\n        }\r\n\r\n        this.markers?.clearMarkers();\r\n        this.compass?.clearHotspots();\r\n\r\n        return Promise.all([\r\n          this.psv.setPanorama(node.panorama, {\r\n            transition      : this.config.transition,\r\n            caption         : node.caption,\r\n            description     : node.description,\r\n            panoData        : node.panoData,\r\n            sphereCorrection: node.sphereCorrection,\r\n          })\r\n            .then((completed) => {\r\n              if (!completed) {\r\n                throw utils.getAbortError();\r\n              }\r\n            }),\r\n          this.datasource.loadLinkedNodes(nodeId),\r\n        ]);\r\n      })\r\n      .then(() => {\r\n        if (this.prop.loadingNode !== nodeId) {\r\n          throw utils.getAbortError();\r\n        }\r\n\r\n        const node = this.prop.currentNode;\r\n\r\n        if (node.markers) {\r\n          if (this.markers) {\r\n            this.markers.setMarkers(node.markers);\r\n          }\r\n          else {\r\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\r\n          }\r\n        }\r\n\r\n        this.__renderLinks(node);\r\n        this.__preload(node);\r\n\r\n        /**\r\n         * @event node-changed\r\n         * @memberof PSV.plugins.VirtualTourPlugin\r\n         * @summary Triggered when the current node is changed\r\n         * @param {string} nodeId\r\n         * @param {PSV.plugins.VirtualTourPlugin.NodeChangedData} data\r\n         */\r\n        this.trigger(EVENTS.NODE_CHANGED, nodeId, {\r\n          fromNode,\r\n          fromLink,\r\n          fromLinkPosition,\r\n        });\r\n\r\n        this.prop.loadingNode = null;\r\n\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        if (utils.isAbortError(err)) {\r\n          return false;\r\n        }\r\n\r\n        this.psv.showError(this.psv.config.lang.loadError);\r\n\r\n        this.psv.loader.hide();\r\n        this.psv.navbar.setCaption('');\r\n\r\n        this.prop.loadingNode = null;\r\n\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @summary Adds the links for the node\r\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n   * @private\r\n   */\r\n  __renderLinks(node) {\r\n    const positions = [];\r\n\r\n    node.links.forEach((link) => {\r\n      const position = this.__getLinkPosition(node, link);\r\n      positions.push(position);\r\n\r\n      if (this.is3D()) {\r\n        const mesh = new THREE.Mesh(ARROW_GEOM, new THREE.MeshLambertMaterial());\r\n        mesh.userData = { [LINK_DATA]: link, longitude: position.longitude };\r\n        mesh.rotation.order = 'YXZ';\r\n        mesh.rotateY(-position.longitude);\r\n        this.psv.dataHelper\r\n          .sphericalCoordsToVector3({ longitude: position.longitude, latitude: 0 }, mesh.position)\r\n          .multiplyScalar(1 / CONSTANTS.SPHERE_RADIUS);\r\n\r\n        const outlineMesh = new THREE.Mesh(ARROW_OUTLINE_GEOM, new THREE.MeshBasicMaterial({ side: THREE.BackSide }));\r\n        outlineMesh.position.copy(mesh.position);\r\n        outlineMesh.rotation.copy(mesh.rotation);\r\n\r\n        setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\r\n        setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.config.arrowStyle.outlineColor);\r\n\r\n        this.arrowsGroup.add(mesh);\r\n        this.arrowsGroup.add(outlineMesh);\r\n      }\r\n      else {\r\n        if (this.isGps()) {\r\n          position.latitude += this.config.markerLatOffset;\r\n        }\r\n\r\n        this.markers.addMarker({\r\n          ...this.config.markerStyle,\r\n          ...link.markerStyle,\r\n          id      : `tour-link-${link.nodeId}`,\r\n          tooltip : link.name,\r\n          hideList: true,\r\n          data    : { [LINK_DATA]: link },\r\n          ...position,\r\n        }, false);\r\n      }\r\n    });\r\n\r\n    if (this.is3D()) {\r\n      this.__positionArrows();\r\n    }\r\n    else {\r\n      this.markers.renderMarkers();\r\n    }\r\n\r\n    if (this.config.linksOnCompass && this.compass) {\r\n      this.compass.setHotspots(positions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Computes the marker position for a link\r\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\r\n   * @return {PSV.Position}\r\n   * @private\r\n   */\r\n  __getLinkPosition(node, link) {\r\n    if (this.isGps()) {\r\n      const p1 = [THREE.MathUtils.degToRad(node.position[0]), THREE.MathUtils.degToRad(node.position[1])];\r\n      const p2 = [THREE.MathUtils.degToRad(link.position[0]), THREE.MathUtils.degToRad(link.position[1])];\r\n      const h1 = node.position[2] !== undefined ? node.position[2] : link.position[2] || 0;\r\n      const h2 = link.position[2] !== undefined ? link.position[2] : node.position[2] || 0;\r\n\r\n      let latitude = 0;\r\n      if (h1 !== h2) {\r\n        latitude = Math.atan((h2 - h1) / distance(p1, p2));\r\n      }\r\n\r\n      const longitude = bearing(p1, p2);\r\n\r\n      return { longitude, latitude };\r\n    }\r\n    else {\r\n      return this.psv.dataHelper.cleanPosition(link);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onEnterObject(mesh, viewerPoint) {\r\n    const link = mesh.userData[LINK_DATA];\r\n\r\n    setMeshColor(mesh, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\r\n\r\n    if (link.name) {\r\n      this.prop.currentTooltip = this.psv.tooltip.create({\r\n        left   : viewerPoint.x,\r\n        top    : viewerPoint.y,\r\n        content: link.name,\r\n      });\r\n    }\r\n\r\n    this.psv.needsUpdate();\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onHoverObject(mesh, viewerPoint) {\r\n    if (this.prop.currentTooltip) {\r\n      this.prop.currentTooltip.move({\r\n        left: viewerPoint.x,\r\n        top : viewerPoint.y,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __onLeaveObject(mesh) {\r\n    const link = mesh.userData[LINK_DATA];\r\n\r\n    setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\r\n\r\n    if (this.prop.currentTooltip) {\r\n      this.prop.currentTooltip.hide();\r\n      this.prop.currentTooltip = null;\r\n    }\r\n\r\n    this.psv.needsUpdate();\r\n  }\r\n\r\n  /**\r\n   * @summary Updates to position of the group of arrows\r\n   * @private\r\n   */\r\n  __positionArrows() {\r\n    this.arrowsGroup.position.copy(this.psv.prop.direction).multiplyScalar(0.5);\r\n    const s = this.config.arrowStyle.scale;\r\n    const f = s[1] + (s[0] - s[1]) * (this.psv.getZoomLevel() / 100);\r\n    const y = 2.5 - (this.psv.getZoomLevel() / 100) * 1.5;\r\n    this.arrowsGroup.position.y += this.config.arrowPosition === 'bottom' ? -y : y;\r\n    this.arrowsGroup.scale.set(f, f, f);\r\n  }\r\n\r\n  /**\r\n   * @summary Manage the preload of the linked panoramas\r\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\r\n   * @private\r\n   */\r\n  __preload(node) {\r\n    if (!this.config.preload) {\r\n      return;\r\n    }\r\n\r\n    this.preload[node.id] = true;\r\n\r\n    this.prop.currentNode.links\r\n      .filter(link => !this.preload[link.nodeId])\r\n      .filter((link) => {\r\n        if (typeof this.config.preload === 'function') {\r\n          return this.config.preload(this.prop.currentNode, link);\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      })\r\n      .forEach((link) => {\r\n        this.preload[link.nodeId] = this.datasource.loadNode(link.nodeId)\r\n          .then((linkNode) => {\r\n            return this.psv.textureLoader.preloadPanorama(linkNode.panorama);\r\n          })\r\n          .then(() => {\r\n            this.preload[link.nodeId] = true;\r\n          })\r\n          .catch(() => {\r\n            delete this.preload[link.nodeId];\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @summary Toggles the visibility of the list of nodes\r\n   */\r\n  toggleNodesList() {\r\n    if (this.psv.panel.prop.contentId === ID_PANEL_NODES_LIST) {\r\n      this.hideNodesList();\r\n    }\r\n    else {\r\n      this.showNodesList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Opens side panel with the list of nodes\r\n   */\r\n  showNodesList() {\r\n    utils.logWarn(`Starting from next version, the VirtualTourPlugin will require the GalleryPlugin to display the list of nodes.`);\r\n\r\n    const nodes = this.change(EVENTS.RENDER_NODES_LIST, Object.values(this.datasource.nodes));\r\n\r\n    this.psv.panel.show({\r\n      id          : ID_PANEL_NODES_LIST,\r\n      content     : NODES_LIST_TEMPLATE(\r\n        nodes,\r\n        this.psv.config.lang[NodesListButton.id],\r\n        this.prop.currentNode?.id\r\n      ),\r\n      noMargin    : true,\r\n      clickHandler: (e) => {\r\n        const li = e.target ? utils.getClosest(e.target, 'li') : undefined;\r\n        const nodeId = li ? li.dataset.nodeId : undefined;\r\n\r\n        if (nodeId) {\r\n          this.setCurrentNode(nodeId);\r\n          this.hideNodesList();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Closes side panel if it contains the list of nodes\r\n   */\r\n  hideNodesList() {\r\n    this.psv.panel.hide(ID_PANEL_NODES_LIST);\r\n  }\r\n\r\n}\r\n"],"names":["AbstractDatasource","plugin","nodes","destroy","loadNode","nodeId","PSVError","loadLinkedNodes","checkNode","node","isGps","id","panorama","position","length","checkLink","link","utils","isExtendedPosition","setMeshColor","mesh","color","material","set","distance","p1","p2","greatArcDistance","bearing","λ1","φ1","λ2","φ2","y","Math","sin","cos","x","atan2","ClientSideDatasource","Promise","resolve","reject","setNodes","rawNodes","linkedNodes","forEach","links","logWarn","name","MODE_CLIENT","MODE_SERVER","MODE_MANUAL","MODE_GPS","MODE_MARKERS","MODE_3D","EVENTS","NODE_CHANGED","RENDER_NODES_LIST","LINK_DATA","DEFAULT_MARKER","html","arrowIconSvg","width","height","scale","anchor","className","style","DEFAULT_ARROW","hoverColor","outlineColor","loader","THREE","ObjectLoader","geometries","parseGeometries","arrowGeometryJson","arrowOutlineGeometryJson","arrow","uuid","arrowOutline","rot","PI","rotateX","ARROW_GEOM","ARROW_OUTLINE_GEOM","ID_PANEL_NODES_LIST","NODES_LIST_TEMPLATE","title","currentNodeId","nodesList","map","thumbnail","caption","join","NodesListButton","navbar","psv","getPlugin","on","CONSTANTS","OPEN_PANEL","CLOSE_PANEL","off","isSupported","isServerSide","gallery","handleEvent","e","type","toggleActive","args","onClick","toggleNodesList","AbstractButton","icon","ServerSideDatasource","config","getNode","nodeResolver","linksResolver","getLinks","then","DEFAULTS","lang","registerButton","VirtualTourPlugin","options","prop","currentNode","currentTooltip","loadingNode","stopObserver","preload","dataMode","positionMode","renderMode","rotateSpeed","transition","DEFAULT_TRANSITION","markerLatOffset","arrowPosition","linksOnCompass","markerStyle","arrowStyle","listButton","markers","compass","datasource","arrowsGroup","is3D","Group","localLight","PointLight","add","init","once","READY","__positionArrows","renderer","scene","ambientLight","AmbientLight","needsUpdate","POSITION_UPDATED","ZOOM_UPDATED","CLICK","observeObjects","startNodeId","setCurrentNode","remove","data","objects","find","o","userData","OBJECT_EVENTS","ENTER_OBJECT","__onEnterObject","detail","object","viewerPoint","HOVER_OBJECT","__onHoverObject","LEAVE_OBJECT","__onLeaveObject","setItems","panoData","sphereCorrection","description","fromLink","hideError","fromNode","fromLinkPosition","__getLinkPosition","all","getAbortError","speed","animate","show","hide","children","filter","clearMarkers","clearHotspots","setPanorama","completed","setMarkers","__renderLinks","__preload","trigger","catch","err","isAbortError","showError","loadError","setCaption","positions","push","Mesh","MeshLambertMaterial","longitude","rotation","order","rotateY","dataHelper","sphericalCoordsToVector3","latitude","multiplyScalar","SPHERE_RADIUS","outlineMesh","MeshBasicMaterial","side","BackSide","copy","addMarker","tooltip","hideList","renderMarkers","setHotspots","MathUtils","degToRad","h1","undefined","h2","atan","cleanPosition","create","left","top","content","move","direction","s","f","getZoomLevel","linkNode","textureLoader","preloadPanorama","panel","contentId","hideNodesList","showNodesList","change","Object","values","noMargin","clickHandler","li","target","getClosest","dataset","AbstractPlugin"],"mappings":"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"}