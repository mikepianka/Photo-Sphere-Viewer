{"version":3,"file":"markers.js","sources":["../../src/plugins/markers/constants.js","../../src/utils/math.js","../../src/PSVError.js","../../src/utils/psv.js","../../src/plugins/markers/utils.js","../../src/plugins/markers/Marker.js","../../src/plugins/markers/MarkersButton.js","../../src/plugins/markers/MarkersListButton.js","../../src/plugins/markers/index.js"],"sourcesContent":["import icon from './pin-list.svg';\r\n\r\n/**\r\n * @summary Available events\r\n * @enum {string}\r\n * @memberof PSV.plugins.MarkersPlugin\r\n * @constant\r\n */\r\nexport const EVENTS = {\r\n  /**\r\n   * @event marker-visibility\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the visibility of a marker changes\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @param {boolean} visible\r\n   */\r\n  MARKER_VISIBILITY  : 'marker-visibility',\r\n  /**\r\n   * @event goto-marker-done\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the animation to a marker is done\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   */\r\n  GOTO_MARKER_DONE   : 'goto-marker-done',\r\n  /**\r\n   * @event leave-marker\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the user puts the cursor away from a marker\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   */\r\n  LEAVE_MARKER       : 'leave-marker',\r\n  /**\r\n   * @event over-marker\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the user puts the cursor hover a marker\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   */\r\n  OVER_MARKER        : 'over-marker',\r\n  /**\r\n   * @event filter:render-markers-list\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Used to alter the list of markers displayed on the side-panel\r\n   * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker[]}\r\n   */\r\n  RENDER_MARKERS_LIST: 'render-markers-list',\r\n  /**\r\n   * @event select-marker\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the user clicks on a marker. The marker can be retrieved from outside the event handler\r\n   * with {@link PSV.plugins.MarkersPlugin.getCurrentMarker}\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @param {PSV.plugins.MarkersPlugin.SelectMarkerData} data\r\n   */\r\n  SELECT_MARKER      : 'select-marker',\r\n  /**\r\n   * @event select-marker-list\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when a marker is selected from the side panel\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   */\r\n  SELECT_MARKER_LIST : 'select-marker-list',\r\n  /**\r\n   * @event unselect-marker\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when a marker was selected and the user clicks elsewhere\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   */\r\n  UNSELECT_MARKER    : 'unselect-marker',\r\n  /**\r\n   * @event hide-markers\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the markers are hidden\r\n   */\r\n  HIDE_MARKERS       : 'hide-markers',\r\n  /**\r\n   * @event set-marker\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the list of markers changes\r\n   * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\r\n   */\r\n  SET_MARKERS        : 'set-markers',\r\n  /**\r\n   * @event show-markers\r\n   * @memberof PSV.plugins.MarkersPlugin\r\n   * @summary Triggered when the markers are shown\r\n   */\r\n  SHOW_MARKERS       : 'show-markers',\r\n};\r\n\r\n/**\r\n * @summary Types of tooltip events\r\n * @memberOf PSV.plugins.MarkersPlugin\r\n * @enum {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const MARKER_TOOLTIP_TRIGGER = {\r\n  click: 'click',\r\n  hover: 'hover',\r\n};\r\n\r\n/**\r\n * @summary Namespace for SVG creation\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * @summary Property name added to marker elements\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const MARKER_DATA = 'psvMarker';\r\n\r\n/**\r\n * @summary Panel identifier for marker content\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const ID_PANEL_MARKER = 'marker';\r\n\r\n/**\r\n * @summary Panel identifier for markers list\r\n * @type {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const ID_PANEL_MARKERS_LIST = 'markersList';\r\n\r\n/**\r\n * @summary Markers list template\r\n * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\r\n * @param {string} title\r\n * @param {string} dataKey\r\n * @returns {string}\r\n * @constant\r\n * @private\r\n */\r\nexport const MARKERS_LIST_TEMPLATE = (markers, title, dataKey) => `\r\n<div class=\"psv-panel-menu psv-panel-menu--stripped\">\r\n  <h1 class=\"psv-panel-menu-title\">${icon} ${title}</h1>\r\n  <ul class=\"psv-panel-menu-list\">\r\n    ${markers.map(marker => `\r\n    <li data-${dataKey}=\"${marker.config.id}\" class=\"psv-panel-menu-item\" tabindex=\"0\">\r\n      ${marker.type === 'image' ? `<span class=\"psv-panel-menu-item-icon\"><img src=\"${marker.config.image}\"/></span>` : ''}\r\n      <span class=\"psv-panel-menu-item-label\">${marker.getListContent()}</span>\r\n    </li>\r\n    `).join('')}\r\n  </ul>\r\n</div>\r\n`;\r\n","/**\r\n * @summary Ensures that a number is in a given interval\r\n * @memberOf PSV.utils\r\n * @param {number} x\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function bound(x, min, max) {\r\n  return Math.max(min, Math.min(max, x));\r\n}\r\n\r\n/**\r\n * @summary Ensure a value is within 0 and `max`\r\n * @param {number} value\r\n * @param {number} max\r\n * @return {number}\r\n */\r\nexport function loop(value, max) {\r\n  let result = value % max;\r\n\r\n  if (result < 0) {\r\n    result += max;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * @summary Checks if a value is an integer\r\n * @memberOf PSV.utils\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nexport function isInteger(value) {\r\n  if (Number.isInteger) {\r\n    return Number.isInteger(value);\r\n  }\r\n  return typeof value === 'number' && Number.isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\n/**\r\n * @summary Tests if a number is power of two\r\n * @memberOf PSV.utils\r\n * @param {number} x\r\n * @return {boolean}\r\n */\r\nexport function isPowerOfTwo(x) {\r\n  return (Math.log(x) / Math.log(2)) % 1 === 0;\r\n}\r\n\r\n/**\r\n * @summary Computes the sum of an array\r\n * @memberOf PSV.utils\r\n * @param {number[]} array\r\n * @returns {number}\r\n */\r\nexport function sum(array) {\r\n  return array.reduce((a, b) => a + b, 0);\r\n}\r\n\r\n/**\r\n * @summary Computes the distance between two points\r\n * @memberOf PSV.utils\r\n * @param {PSV.Point} p1\r\n * @param {PSV.Point} p2\r\n * @returns {number}\r\n */\r\nexport function distance(p1, p2) {\r\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n}\r\n\r\n/**\r\n * @summary Compute the shortest offset between two longitudes\r\n * @memberOf PSV.utils\r\n * @param {number} from\r\n * @param {number} to\r\n * @returns {number}\r\n */\r\nexport function getShortestArc(from, to) {\r\n  const tCandidates = [\r\n    0, // direct\r\n    Math.PI * 2, // clock-wise cross zero\r\n    -Math.PI * 2, // counter-clock-wise cross zero\r\n  ];\r\n\r\n  return tCandidates.reduce((value, candidate) => {\r\n    const newCandidate = to - from + candidate;\r\n    return Math.abs(newCandidate) < Math.abs(value) ? newCandidate : value;\r\n  }, Infinity);\r\n}\r\n\r\n/**\r\n * @summary Computes the angle between the current position and a target position\r\n * @memberOf PSV.utils\r\n * @param {PSV.Position} position1\r\n * @param {PSV.Position} position2\r\n * @returns {number}\r\n */\r\nexport function getAngle(position1, position2) {\r\n  return Math.acos(\r\n    Math.cos(position1.latitude)\r\n    * Math.cos(position2.latitude)\r\n    * Math.cos(position1.longitude - position2.longitude)\r\n    + Math.sin(position1.latitude)\r\n    * Math.sin(position2.latitude)\r\n  );\r\n}\r\n\r\n/**\r\n * @summary Returns the distance between two points on a sphere of radius one\r\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\r\n * @memberOf PSV.utils\r\n * @param {number[]} p1\r\n * @param {number[]} p2\r\n * @returns {number}\r\n */\r\nexport function greatArcDistance(p1, p2) {\r\n  const [λ1, φ1] = p1;\r\n  const [λ2, φ2] = p2;\r\n\r\n  const x = (λ2 - λ1) * Math.cos((φ1 + φ2) / 2);\r\n  const y = (φ2 - φ1);\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n","/**\r\n * @summary Custom error used in the lib\r\n * @param {string} message\r\n * @constructor\r\n * @memberOf PSV\r\n */\r\nfunction PSVError(message) {\r\n  this.message = message;\r\n\r\n  // Use V8's native method if available, otherwise fallback\r\n  if ('captureStackTrace' in Error) {\r\n    Error.captureStackTrace(this, PSVError);\r\n  }\r\n  else {\r\n    this.stack = (new Error()).stack;\r\n  }\r\n}\r\n\r\nPSVError.prototype = Object.create(Error.prototype);\r\nPSVError.prototype.name = 'PSVError';\r\nPSVError.prototype.constructor = PSVError;\r\n\r\nexport { PSVError };\r\n","import * as THREE from 'three';\r\nimport { PSVError } from '../PSVError';\r\nimport { bound, loop } from './math';\r\n\r\n/**\r\n * @summary Returns the plugin constructor from the imported object\r\n * For retrocompatibility with previous default exports\r\n * @memberOf PSV.utils\r\n * @package\r\n */\r\nexport function pluginInterop(plugin, target) {\r\n  if (plugin) {\r\n    for (const [, p] of [['_', plugin], ...Object.entries(plugin)]) {\r\n      if (p.prototype instanceof target) {\r\n        return p;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * @summary Builds an Error with name 'AbortError'\r\n * @memberOf PSV.utils\r\n * @return {Error}\r\n */\r\nexport function getAbortError() {\r\n  const error = new Error('Loading was aborted.');\r\n  error.name = 'AbortError';\r\n  return error;\r\n}\r\n\r\n/**\r\n * @summary Tests if an Error has name 'AbortError'\r\n * @memberOf PSV.utils\r\n * @param {Error} err\r\n * @return {boolean}\r\n */\r\nexport function isAbortError(err) {\r\n  return err?.name === 'AbortError';\r\n}\r\n\r\n/**\r\n * @summary Displays a warning in the console\r\n * @memberOf PSV.utils\r\n * @param {string} message\r\n */\r\nexport function logWarn(message) {\r\n  console.warn(`PhotoSphereViewer: ${message}`);\r\n}\r\n\r\n/**\r\n * @summary Checks if an object is a {PSV.ExtendedPosition}, ie has x/y or longitude/latitude\r\n * @memberOf PSV.utils\r\n * @param {object} object\r\n * @returns {boolean}\r\n */\r\nexport function isExtendedPosition(object) {\r\n  return [['x', 'y'], ['longitude', 'latitude']].some(([key1, key2]) => {\r\n    return object[key1] !== undefined && object[key2] !== undefined;\r\n  });\r\n}\r\n\r\n/**\r\n * @summary Returns the value of a given attribute in the panorama metadata\r\n * @memberOf PSV.utils\r\n * @param {string} data\r\n * @param {string} attr\r\n * @returns (number)\r\n */\r\nexport function getXMPValue(data, attr) {\r\n  // XMP data are stored in children\r\n  let result = data.match('<GPano:' + attr + '>(.*)</GPano:' + attr + '>');\r\n  if (result !== null) {\r\n    const val = parseInt(result[1], 10);\r\n    return isNaN(val) ? null : val;\r\n  }\r\n\r\n  // XMP data are stored in attributes\r\n  result = data.match('GPano:' + attr + '=\"(.*?)\"');\r\n  if (result !== null) {\r\n    const val = parseInt(result[1], 10);\r\n    return isNaN(val) ? null : val;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * @readonly\r\n * @private\r\n * @type {{top: string, left: string, bottom: string, center: string, right: string}}\r\n */\r\nconst CSS_POSITIONS = {\r\n  top   : '0%',\r\n  bottom: '100%',\r\n  left  : '0%',\r\n  right : '100%',\r\n  center: '50%',\r\n};\r\n\r\n/**\r\n * @summary Translate CSS values like \"top center\" or \"10% 50%\" as top and left positions\r\n * @memberOf PSV.utils\r\n * @description The implementation is as close as possible to the \"background-position\" specification\r\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\r\n * @param {string|PSV.Point} value\r\n * @returns {PSV.Point}\r\n */\r\nexport function parsePosition(value) {\r\n  if (!value) {\r\n    return { x: 0.5, y: 0.5 };\r\n  }\r\n\r\n  if (typeof value === 'object') {\r\n    return value;\r\n  }\r\n\r\n  let tokens = value.toLocaleLowerCase().split(' ').slice(0, 2);\r\n\r\n  if (tokens.length === 1) {\r\n    if (CSS_POSITIONS[tokens[0]] !== undefined) {\r\n      tokens = [tokens[0], 'center'];\r\n    }\r\n    else {\r\n      tokens = [tokens[0], tokens[0]];\r\n    }\r\n  }\r\n\r\n  const xFirst = tokens[1] !== 'left' && tokens[1] !== 'right' && tokens[0] !== 'top' && tokens[0] !== 'bottom';\r\n\r\n  tokens = tokens.map(token => CSS_POSITIONS[token] || token);\r\n\r\n  if (!xFirst) {\r\n    tokens.reverse();\r\n  }\r\n\r\n  const parsed = tokens.join(' ').match(/^([0-9.]+)% ([0-9.]+)%$/);\r\n\r\n  if (parsed) {\r\n    return {\r\n      x: parseFloat(parsed[1]) / 100,\r\n      y: parseFloat(parsed[2]) / 100,\r\n    };\r\n  }\r\n  else {\r\n    return { x: 0.5, y: 0.5 };\r\n  }\r\n}\r\n\r\n/**\r\n * @readonly\r\n * @private\r\n */\r\nconst LEFT_MAP = { 0: 'left', 0.5: 'center', 1: 'right' };\r\n/**\r\n * @readonly\r\n * @private\r\n */\r\nconst TOP_MAP = { 0: 'top', 0.5: 'center', 1: 'bottom' };\r\n\r\n/**\r\n * @summary Parse a CSS-like position into an array of position keywords among top, bottom, left, right and center\r\n * @memberOf PSV.utils\r\n * @param {string | string[]} value\r\n * @param {string} defaultValue\r\n * @param {boolean} [allowCenter=true]\r\n * @return {string[]}\r\n */\r\nexport function cleanPosition(value, defaultValue, allowCenter = true) {\r\n  if (!value) {\r\n    return defaultValue.split(' ');\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    const tempPos = parsePosition(value);\r\n\r\n    if (!(tempPos.x in LEFT_MAP) || !(tempPos.y in TOP_MAP)) {\r\n      throw new PSVError(`Unable to parse position \"${value}\"`);\r\n    }\r\n\r\n    value = [TOP_MAP[tempPos.y], LEFT_MAP[tempPos.x]];\r\n  }\r\n\r\n  if (!allowCenter && value[0] === 'center' && value[1] === 'center') {\r\n    throw new PSVError('Unable to parse position \"center center\"');\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n/**\r\n * @summary Parses an speed\r\n * @memberOf PSV.utils\r\n * @param {string|number} speed - The speed, in radians/degrees/revolutions per second/minute\r\n * @returns {number} radians per second\r\n * @throws {PSV.PSVError} when the speed cannot be parsed\r\n */\r\nexport function parseSpeed(speed) {\r\n  let parsed;\r\n\r\n  if (typeof speed === 'string') {\r\n    const speedStr = speed.toString().trim();\r\n\r\n    // Speed extraction\r\n    let speedValue = parseFloat(speedStr.replace(/^(-?[0-9]+(?:\\.[0-9]*)?).*$/, '$1'));\r\n    const speedUnit = speedStr.replace(/^-?[0-9]+(?:\\.[0-9]*)?(.*)$/, '$1').trim();\r\n\r\n    // \"per minute\" -> \"per second\"\r\n    if (speedUnit.match(/(pm|per minute)$/)) {\r\n      speedValue /= 60;\r\n    }\r\n\r\n    // Which unit?\r\n    switch (speedUnit) {\r\n      // Degrees per minute / second\r\n      case 'dpm':\r\n      case 'degrees per minute':\r\n      case 'dps':\r\n      case 'degrees per second':\r\n        parsed = THREE.MathUtils.degToRad(speedValue);\r\n        break;\r\n\r\n      // Radians per minute / second\r\n      case 'rdpm':\r\n      case 'radians per minute':\r\n      case 'rdps':\r\n      case 'radians per second':\r\n        parsed = speedValue;\r\n        break;\r\n\r\n      // Revolutions per minute / second\r\n      case 'rpm':\r\n      case 'revolutions per minute':\r\n      case 'rps':\r\n      case 'revolutions per second':\r\n        parsed = speedValue * Math.PI * 2;\r\n        break;\r\n\r\n      // Unknown unit\r\n      default:\r\n        throw new PSVError('Unknown speed unit \"' + speedUnit + '\"');\r\n    }\r\n  }\r\n  else {\r\n    parsed = speed;\r\n  }\r\n\r\n  return parsed;\r\n}\r\n\r\n/**\r\n * @summary Parses an angle value in radians or degrees and returns a normalized value in radians\r\n * @memberOf PSV.utils\r\n * @param {string|number} angle - eg: 3.14, 3.14rad, 180deg\r\n * @param {boolean} [zeroCenter=false] - normalize between -Pi - Pi instead of 0 - 2*Pi\r\n * @param {boolean} [halfCircle=zeroCenter] - normalize between -Pi/2 - Pi/2 instead of -Pi - Pi\r\n * @returns {number}\r\n * @throws {PSV.PSVError} when the angle cannot be parsed\r\n */\r\nexport function parseAngle(angle, zeroCenter = false, halfCircle = zeroCenter) {\r\n  let parsed;\r\n\r\n  if (typeof angle === 'string') {\r\n    const match = angle.toLowerCase().trim().match(/^(-?[0-9]+(?:\\.[0-9]*)?)(.*)$/);\r\n\r\n    if (!match) {\r\n      throw new PSVError('Unknown angle \"' + angle + '\"');\r\n    }\r\n\r\n    const value = parseFloat(match[1]);\r\n    const unit = match[2];\r\n\r\n    if (unit) {\r\n      switch (unit) {\r\n        case 'deg':\r\n        case 'degs':\r\n          parsed = THREE.MathUtils.degToRad(value);\r\n          break;\r\n        case 'rad':\r\n        case 'rads':\r\n          parsed = value;\r\n          break;\r\n        default:\r\n          throw new PSVError('Unknown angle unit \"' + unit + '\"');\r\n      }\r\n    }\r\n    else {\r\n      parsed = value;\r\n    }\r\n  }\r\n  else if (typeof angle === 'number' && !isNaN(angle)) {\r\n    parsed = angle;\r\n  }\r\n  else {\r\n    throw new PSVError('Unknown angle \"' + angle + '\"');\r\n  }\r\n\r\n  parsed = loop(zeroCenter ? parsed + Math.PI : parsed, Math.PI * 2);\r\n\r\n  return zeroCenter ? bound(parsed - Math.PI, -Math.PI / (halfCircle ? 2 : 1), Math.PI / (halfCircle ? 2 : 1)) : parsed;\r\n}\r\n\r\n/**\r\n * @summary Creates a THREE texture from an image\r\n * @memberOf PSV.utils\r\n * @param {HTMLImageElement | HTMLCanvasElement} img\r\n * @return {external:THREE.Texture}\r\n */\r\nexport function createTexture(img) {\r\n  const texture = new THREE.Texture(img);\r\n  texture.needsUpdate = true;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.generateMipmaps = false;\r\n  return texture;\r\n}\r\n\r\nconst quaternion = new THREE.Quaternion();\r\n\r\n/**\r\n * @summary Applies the inverse of Euler angles to a vector\r\n * @memberOf PSV.utils\r\n * @param {external:THREE.Vector3} vector\r\n * @param {external:THREE.Euler} euler\r\n */\r\nexport function applyEulerInverse(vector, euler) {\r\n  quaternion.setFromEuler(euler).invert();\r\n  vector.applyQuaternion(quaternion);\r\n}\r\n","import { CONSTANTS, utils } from '../..';\r\n\r\n/**\r\n * Returns intermediary point between two points on the sphere\r\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\r\n * @param {number[]} p1\r\n * @param {number[]} p2\r\n * @param {number} f\r\n * @returns {number[]}\r\n * @private\r\n */\r\nexport function greatArcIntermediaryPoint(p1, p2, f) {\r\n  const [λ1, φ1] = p1;\r\n  const [λ2, φ2] = p2;\r\n\r\n  const r = utils.greatArcDistance(p1, p2);\r\n  const a = Math.sin((1 - f) * r) / Math.sin(r);\r\n  const b = Math.sin(f * r) / Math.sin(r);\r\n  const x = a * Math.cos(φ1) * Math.cos(λ1) + b * Math.cos(φ2) * Math.cos(λ2);\r\n  const y = a * Math.cos(φ1) * Math.sin(λ1) + b * Math.cos(φ2) * Math.sin(λ2);\r\n  const z = a * Math.sin(φ1) + b * Math.sin(φ2);\r\n\r\n  return [\r\n    Math.atan2(y, x),\r\n    Math.atan2(z, Math.sqrt(x * x + y * y)),\r\n  ];\r\n}\r\n\r\n/**\r\n * @summary Computes the center point of a polygon\r\n * @todo Get \"visual center\" (https://blog.mapbox.com/a-new-algorithm-for-finding-a-visual-center-of-a-polygon-7c77e6492fbc)\r\n * @param {number[][]} polygon\r\n * @returns {number[]}\r\n * @private\r\n */\r\nexport function getPolygonCenter(polygon) {\r\n  // apply offsets to avoid crossing the origin\r\n  const workPoints = [polygon[0]];\r\n\r\n  let k = 0;\r\n  for (let i = 1; i < polygon.length; i++) {\r\n    const d = polygon[i - 1][0] - polygon[i][0];\r\n    if (d > Math.PI) { // crossed the origin left to right\r\n      k += 1;\r\n    }\r\n    else if (d < -Math.PI) { // crossed the origin right to left\r\n      k -= 1;\r\n    }\r\n    workPoints.push([polygon[i][0] + k * 2 * Math.PI, polygon[i][1]]);\r\n  }\r\n\r\n  const sum = workPoints.reduce((intermediary, point) => [intermediary[0] + point[0], intermediary[1] + point[1]]);\r\n  return [utils.parseAngle(sum[0] / polygon.length), sum[1] / polygon.length];\r\n}\r\n\r\n/**\r\n * @summary Computes the middle point of a polyline\r\n * @param {number[][]} polyline\r\n * @returns {number[]}\r\n * @private\r\n */\r\nexport function getPolylineCenter(polyline) {\r\n  // compute each segment length + total length\r\n  let length = 0;\r\n  const lengths = [];\r\n\r\n  for (let i = 0; i < polyline.length - 1; i++) {\r\n    const l = utils.greatArcDistance(polyline[i], polyline[i + 1]) * CONSTANTS.SPHERE_RADIUS;\r\n\r\n    lengths.push(l);\r\n    length += l;\r\n  }\r\n\r\n  // iterate until length / 2\r\n  let consumed = 0;\r\n\r\n  for (let j = 0; j < polyline.length - 1; j++) {\r\n    // once the segment containing the middle point is found, computes the intermediary point\r\n    if (consumed + lengths[j] > length / 2) {\r\n      const r = (length / 2 - consumed) / lengths[j];\r\n      return greatArcIntermediaryPoint(polyline[j], polyline[j + 1], r);\r\n    }\r\n\r\n    consumed += lengths[j];\r\n  }\r\n\r\n  // this never happens\r\n  return polyline[Math.round(polyline.length / 2)];\r\n}\r\n","import * as THREE from 'three';\r\nimport { CONSTANTS, PSVError, utils } from '../..';\r\nimport { getShortestArc, logWarn } from '../../utils';\r\nimport { MARKER_DATA, MARKER_TOOLTIP_TRIGGER, SVG_NS } from './constants';\r\nimport { getPolygonCenter, getPolylineCenter } from './utils';\r\n\r\n/**\r\n * @summary Types of marker\r\n * @memberOf PSV.plugins.MarkersPlugin\r\n * @enum {string}\r\n * @constant\r\n * @private\r\n */\r\nconst MARKER_TYPES = {\r\n  image      : 'image',\r\n  imageLayer : 'imageLayer',\r\n  html       : 'html',\r\n  polygonPx  : 'polygonPx',\r\n  polygonRad : 'polygonRad',\r\n  polylinePx : 'polylinePx',\r\n  polylineRad: 'polylineRad',\r\n  square     : 'square',\r\n  rect       : 'rect',\r\n  circle     : 'circle',\r\n  ellipse    : 'ellipse',\r\n  path       : 'path',\r\n};\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.MarkersPlugin.Properties\r\n * @summary Marker properties, see {@link https://photo-sphere-viewer.js.org/plugins/plugin-markers.html#markers-options}\r\n */\r\n\r\n/**\r\n * @summary Object representing a marker\r\n * @memberOf PSV.plugins.MarkersPlugin\r\n */\r\nexport class Marker {\r\n\r\n  /**\r\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\r\n   * @param {PSV.Viewer} psv\r\n   * @throws {PSV.PSVError} when the configuration is incorrect\r\n   */\r\n  constructor(properties, psv) {\r\n    if (!properties.id) {\r\n      throw new PSVError('missing marker id');\r\n    }\r\n\r\n    /**\r\n     * @member {PSV.Viewer}\r\n     * @readonly\r\n     * @protected\r\n     */\r\n    this.psv = psv;\r\n\r\n    /**\r\n     * @member {string}\r\n     * @readonly\r\n     */\r\n    this.id = properties.id;\r\n\r\n    /**\r\n     * @member {string}\r\n     * @readonly\r\n     */\r\n    this.type = Marker.getType(properties, false);\r\n\r\n    /**\r\n     * @member {boolean}\r\n     * @protected\r\n     */\r\n    this.visible = true;\r\n\r\n    /**\r\n     * @member {HTMLElement|SVGElement|THREE.Object3D}\r\n     * @readonly\r\n     */\r\n    this.$el = null;\r\n\r\n    /**\r\n     * @summary Original configuration of the marker\r\n     * @member {PSV.plugins.MarkersPlugin.Properties}\r\n     * @readonly\r\n     */\r\n    this.config = {};\r\n\r\n    /**\r\n     * @summary User data associated to the marker\r\n     * @member {any}\r\n     */\r\n    this.data = undefined;\r\n\r\n    /**\r\n     * @summary Tooltip instance for this marker\r\n     * @member {PSV.components.Tooltip}\r\n     */\r\n    this.tooltip = null;\r\n\r\n    /**\r\n     * @summary Computed properties\r\n     * @member {Object}\r\n     * @protected\r\n     * @property {boolean} dynamicSize\r\n     * @property {PSV.Point} anchor\r\n     * @property {boolean} visible - actually visible in the view\r\n     * @property {boolean} staticTooltip - the tooltip must always be shown\r\n     * @property {PSV.Position} position - position in spherical coordinates\r\n     * @property {PSV.Point} position2D - position in viewer coordinates\r\n     * @property {external:THREE.Vector3[]} positions3D - positions in 3D space\r\n     * @property {number} width\r\n     * @property {number} height\r\n     * @property {*} def\r\n     */\r\n    this.props = {\r\n      dynamicSize  : false,\r\n      anchor       : null,\r\n      visible      : false,\r\n      staticTooltip: false,\r\n      position     : null,\r\n      position2D   : null,\r\n      positions3D  : null,\r\n      width        : null,\r\n      height       : null,\r\n      def          : null,\r\n    };\r\n\r\n    /**\r\n     * @summary THREE file loader\r\n     * @type {THREE:TextureLoader}\r\n     * @private\r\n     */\r\n    this.loader = null;\r\n\r\n    if (this.is3d()) {\r\n      this.loader = new THREE.TextureLoader();\r\n      if (this.psv.config.withCredentials) {\r\n        this.loader.setWithCredentials(true);\r\n      }\r\n      if (this.psv.config.requestHeaders && typeof this.psv.config.requestHeaders === 'object') {\r\n        this.loader.setRequestHeader(this.psv.config.requestHeaders);\r\n      }\r\n    }\r\n\r\n    // create element\r\n    if (this.isNormal()) {\r\n      this.$el = document.createElement('div');\r\n    }\r\n    else if (this.isPolygon()) {\r\n      this.$el = document.createElementNS(SVG_NS, 'polygon');\r\n    }\r\n    else if (this.isPolyline()) {\r\n      this.$el = document.createElementNS(SVG_NS, 'polyline');\r\n    }\r\n    else if (this.isSvg()) {\r\n      this.$el = document.createElementNS(SVG_NS, this.type);\r\n    }\r\n\r\n    if (!this.is3d()) {\r\n      this.$el.id = `psv-marker-${this.id}`;\r\n      this.$el[MARKER_DATA] = this;\r\n    }\r\n\r\n    this.update(properties);\r\n  }\r\n\r\n  /**\r\n   * @summary Destroys the marker\r\n   */\r\n  destroy() {\r\n    delete this.$el[MARKER_DATA];\r\n    delete this.$el;\r\n    delete this.config;\r\n    delete this.props;\r\n    delete this.psv;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a 3D marker (imageLayer)\r\n   * @returns {boolean}\r\n   */\r\n  is3d() {\r\n    return this.type === MARKER_TYPES.imageLayer;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a normal marker (image or html)\r\n   * @returns {boolean}\r\n   */\r\n  isNormal() {\r\n    return this.type === MARKER_TYPES.image\r\n      || this.type === MARKER_TYPES.html;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a polygon/polyline marker\r\n   * @returns {boolean}\r\n   */\r\n  isPoly() {\r\n    return this.isPolygon()\r\n      || this.isPolyline();\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a polygon/polyline using pixel coordinates\r\n   * @returns {boolean}\r\n   */\r\n  isPolyPx() {\r\n    return this.type === MARKER_TYPES.polygonPx\r\n      || this.type === MARKER_TYPES.polylinePx;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a polygon/polyline using radian coordinates\r\n   * @returns {boolean}\r\n   */\r\n  isPolyRad() {\r\n    return this.type === MARKER_TYPES.polygonRad\r\n      || this.type === MARKER_TYPES.polylineRad;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a polygon marker\r\n   * @returns {boolean}\r\n   */\r\n  isPolygon() {\r\n    return this.type === MARKER_TYPES.polygonPx\r\n      || this.type === MARKER_TYPES.polygonRad;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is a polyline marker\r\n   * @returns {boolean}\r\n   */\r\n  isPolyline() {\r\n    return this.type === MARKER_TYPES.polylinePx\r\n      || this.type === MARKER_TYPES.polylineRad;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if it is an SVG marker\r\n   * @returns {boolean}\r\n   */\r\n  isSvg() {\r\n    return this.type === MARKER_TYPES.square\r\n      || this.type === MARKER_TYPES.rect\r\n      || this.type === MARKER_TYPES.circle\r\n      || this.type === MARKER_TYPES.ellipse\r\n      || this.type === MARKER_TYPES.path;\r\n  }\r\n\r\n  /**\r\n   * @summary Computes marker scale from zoom level\r\n   * @param {number} zoomLevel\r\n   * @param {PSV.Position} position\r\n   * @returns {number}\r\n   */\r\n  getScale(zoomLevel, position) {\r\n    if (!this.config.scale) {\r\n      return 1;\r\n    }\r\n    if (typeof this.config.scale === 'function') {\r\n      return this.config.scale(zoomLevel, position);\r\n    }\r\n\r\n    let scale = 1;\r\n    if (Array.isArray(this.config.scale.zoom)) {\r\n      const bounds = this.config.scale.zoom;\r\n      scale *= bounds[0] + (bounds[1] - bounds[0]) * CONSTANTS.EASINGS.inQuad(zoomLevel / 100);\r\n    }\r\n    if (Array.isArray(this.config.scale.longitude)) {\r\n      const bounds = this.config.scale.longitude;\r\n      const halfFov = THREE.MathUtils.degToRad(this.psv.prop.hFov) / 2;\r\n      const arc = Math.abs(getShortestArc(this.props.position.longitude, position.longitude));\r\n      scale *= bounds[1] + (bounds[0] - bounds[1]) * CONSTANTS.EASINGS.outQuad(Math.max(0, (halfFov - arc) / halfFov));\r\n    }\r\n    return scale;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the markers list content for the marker, it can be either :\r\n   * - the `listContent`\r\n   * - the `tooltip.content`\r\n   * - the `html`\r\n   * - the `id`\r\n   * @returns {*}\r\n   */\r\n  getListContent() {\r\n    if (this.config.listContent) {\r\n      return this.config.listContent;\r\n    }\r\n    else if (this.config.tooltip.content) {\r\n      return this.config.tooltip.content;\r\n    }\r\n    else if (this.config.html) {\r\n      return this.config.html;\r\n    }\r\n    else {\r\n      return this.id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Display the tooltip of this marker\r\n   * @param {{clientX: number, clientY: number}} [mousePosition]\r\n   */\r\n  showTooltip(mousePosition) {\r\n    if (this.props.visible && this.config.tooltip.content && this.props.position2D) {\r\n      const config = {\r\n        ...this.config.tooltip,\r\n        data: this,\r\n      };\r\n\r\n      if (this.isPoly()) {\r\n        const viewerPos = utils.getPosition(this.psv.container);\r\n\r\n        config.box = { // separate the tooltip from the cursor\r\n          width : this.psv.tooltip.size.arrow * 2,\r\n          height: this.psv.tooltip.size.arrow * 2,\r\n        };\r\n\r\n        if (mousePosition) {\r\n          config.top = mousePosition.clientY - viewerPos.top - this.psv.tooltip.size.arrow / 2;\r\n          config.left = mousePosition.clientX - viewerPos.left - this.psv.tooltip.size.arrow;\r\n        }\r\n        else {\r\n          config.top = this.props.position2D.y;\r\n          config.left = this.props.position2D.x;\r\n        }\r\n      }\r\n      else {\r\n        config.top = this.props.position2D.y;\r\n        config.left = this.props.position2D.x;\r\n        config.box = {\r\n          width : this.props.width,\r\n          height: this.props.height,\r\n        };\r\n      }\r\n\r\n      if (this.tooltip) {\r\n        this.tooltip.move(config);\r\n      }\r\n      else {\r\n        this.tooltip = this.psv.tooltip.create(config);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Recompute the position of the tooltip\r\n   */\r\n  refreshTooltip() {\r\n    if (this.tooltip) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Hides the tooltip of this marker\r\n   */\r\n  hideTooltip() {\r\n    if (this.tooltip) {\r\n      this.tooltip.hide();\r\n      this.tooltip = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Updates the marker with new properties\r\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\r\n   * @throws {PSV.PSVError} when the configuration is incorrect\r\n   */\r\n  update(properties) {\r\n    const newType = Marker.getType(properties, true);\r\n\r\n    if (newType !== undefined && newType !== this.type) {\r\n      throw new PSVError('cannot change marker type');\r\n    }\r\n\r\n    utils.deepmerge(this.config, properties);\r\n    if (typeof this.config.tooltip === 'string') {\r\n      this.config.tooltip = { content: this.config.tooltip };\r\n    }\r\n    if (!this.config.tooltip) {\r\n      this.config.tooltip = {};\r\n    }\r\n    if (!this.config.tooltip.trigger) {\r\n      this.config.tooltip.trigger = MARKER_TOOLTIP_TRIGGER.hover;\r\n    }\r\n\r\n    this.data = this.config.data;\r\n    this.visible = this.config.visible !== false;\r\n\r\n    if (!this.is3d()) {\r\n      // reset CSS class\r\n      if (this.isNormal()) {\r\n        this.$el.setAttribute('class', 'psv-marker psv-marker--normal');\r\n      }\r\n      else {\r\n        this.$el.setAttribute('class', 'psv-marker psv-marker--svg');\r\n      }\r\n\r\n      // add CSS classes\r\n      if (this.config.className) {\r\n        utils.addClasses(this.$el, this.config.className);\r\n      }\r\n\r\n      if (this.config.tooltip) {\r\n        utils.addClasses(this.$el, 'psv-marker--has-tooltip');\r\n      }\r\n      if (this.config.content) {\r\n        utils.addClasses(this.$el, 'psv-marler--has-content');\r\n      }\r\n\r\n      // apply style\r\n      this.$el.style.opacity = this.config.opacity ?? 1;\r\n      if (this.config.style) {\r\n        utils.deepmerge(this.$el.style, this.config.style);\r\n      }\r\n    }\r\n\r\n    // parse anchor\r\n    this.props.anchor = utils.parsePosition(this.config.anchor);\r\n\r\n    // clean scale\r\n    if (this.config.scale) {\r\n      if (typeof this.config.scale === 'number') {\r\n        logWarn('Single value marker scale is deprecated, please use an array of two values.');\r\n        this.config.scale = { zoom: [0, this.config.scale] };\r\n      }\r\n      if (Array.isArray(this.config.scale)) {\r\n        this.config.scale = { zoom: this.config.scale };\r\n      }\r\n    }\r\n\r\n    if (this.isNormal()) {\r\n      this.__updateNormal();\r\n    }\r\n    else if (this.isPoly()) {\r\n      this.__updatePoly();\r\n    }\r\n    else if (this.isSvg()) {\r\n      this.__updateSvg();\r\n    }\r\n    else if (this.is3d()) {\r\n      this.__update3d();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Updates a normal marker\r\n   * @private\r\n   */\r\n  __updateNormal() {\r\n    if (!utils.isExtendedPosition(this.config)) {\r\n      throw new PSVError('missing marker position, latitude/longitude or x/y');\r\n    }\r\n\r\n    if (this.config.image && (!this.config.width || !this.config.height)) {\r\n      throw new PSVError('missing marker width/height');\r\n    }\r\n\r\n    if (this.config.width && this.config.height) {\r\n      this.props.dynamicSize = false;\r\n      this.props.width = this.config.width;\r\n      this.props.height = this.config.height;\r\n      this.$el.style.width = this.config.width + 'px';\r\n      this.$el.style.height = this.config.height + 'px';\r\n    }\r\n    else {\r\n      this.props.dynamicSize = true;\r\n    }\r\n\r\n    if (this.config.image) {\r\n      this.props.def = this.config.image;\r\n      this.$el.style.backgroundImage = `url(${this.config.image})`;\r\n    }\r\n    else if (this.config.html) {\r\n      this.props.def = this.config.html;\r\n      this.$el.innerHTML = this.config.html;\r\n    }\r\n\r\n    // set anchor\r\n    this.$el.style.transformOrigin = `${this.props.anchor.x * 100}% ${this.props.anchor.y * 100}%`;\r\n\r\n    // convert texture coordinates to spherical coordinates\r\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\r\n\r\n    // compute x/y/z position\r\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\r\n  }\r\n\r\n  /**\r\n   * @summary Updates an SVG marker\r\n   * @private\r\n   */\r\n  __updateSvg() {\r\n    if (!utils.isExtendedPosition(this.config)) {\r\n      throw new PSVError('missing marker position, latitude/longitude or x/y');\r\n    }\r\n\r\n    this.props.dynamicSize = true;\r\n\r\n    // set content\r\n    switch (this.type) {\r\n      case MARKER_TYPES.square:\r\n        this.props.def = {\r\n          x     : 0,\r\n          y     : 0,\r\n          width : this.config.square,\r\n          height: this.config.square,\r\n        };\r\n        break;\r\n\r\n      case MARKER_TYPES.rect:\r\n        if (Array.isArray(this.config.rect)) {\r\n          this.props.def = {\r\n            x     : 0,\r\n            y     : 0,\r\n            width : this.config.rect[0],\r\n            height: this.config.rect[1],\r\n          };\r\n        }\r\n        else {\r\n          this.props.def = {\r\n            x     : 0,\r\n            y     : 0,\r\n            width : this.config.rect.width,\r\n            height: this.config.rect.height,\r\n          };\r\n        }\r\n        break;\r\n\r\n      case MARKER_TYPES.circle:\r\n        this.props.def = {\r\n          cx: this.config.circle,\r\n          cy: this.config.circle,\r\n          r : this.config.circle,\r\n        };\r\n        break;\r\n\r\n      case MARKER_TYPES.ellipse:\r\n        if (Array.isArray(this.config.ellipse)) {\r\n          this.props.def = {\r\n            cx: this.config.ellipse[0],\r\n            cy: this.config.ellipse[1],\r\n            rx: this.config.ellipse[0],\r\n            ry: this.config.ellipse[1],\r\n          };\r\n        }\r\n        else {\r\n          this.props.def = {\r\n            cx: this.config.ellipse.rx,\r\n            cy: this.config.ellipse.ry,\r\n            rx: this.config.ellipse.rx,\r\n            ry: this.config.ellipse.ry,\r\n          };\r\n        }\r\n        break;\r\n\r\n      case MARKER_TYPES.path:\r\n        this.props.def = {\r\n          d: this.config.path,\r\n        };\r\n        break;\r\n\r\n      // no default\r\n    }\r\n\r\n    utils.each(this.props.def, (value, prop) => {\r\n      this.$el.setAttributeNS(null, prop, value);\r\n    });\r\n\r\n    // set style\r\n    if (this.config.svgStyle) {\r\n      utils.each(this.config.svgStyle, (value, prop) => {\r\n        this.$el.setAttributeNS(null, utils.dasherize(prop), value);\r\n      });\r\n    }\r\n    else {\r\n      this.$el.setAttributeNS(null, 'fill', 'rgba(0,0,0,0.5)');\r\n    }\r\n\r\n    // convert texture coordinates to spherical coordinates\r\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\r\n\r\n    // compute x/y/z position\r\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\r\n  }\r\n\r\n  /**\r\n   * @summary Updates a polygon marker\r\n   * @private\r\n   */\r\n  __updatePoly() {\r\n    this.props.dynamicSize = true;\r\n\r\n    // set style\r\n    if (this.config.svgStyle) {\r\n      utils.each(this.config.svgStyle, (value, prop) => {\r\n        this.$el.setAttributeNS(null, utils.dasherize(prop), value);\r\n      });\r\n\r\n      if (this.isPolyline() && !this.config.svgStyle.fill) {\r\n        this.$el.setAttributeNS(null, 'fill', 'none');\r\n      }\r\n    }\r\n    else if (this.isPolygon()) {\r\n      this.$el.setAttributeNS(null, 'fill', 'rgba(0,0,0,0.5)');\r\n    }\r\n    else if (this.isPolyline()) {\r\n      this.$el.setAttributeNS(null, 'fill', 'none');\r\n      this.$el.setAttributeNS(null, 'stroke', 'rgb(0,0,0)');\r\n    }\r\n\r\n    // fold arrays: [1,2,3,4] => [[1,2],[3,4]]\r\n    const actualPoly = this.config.polygonPx || this.config.polygonRad || this.config.polylinePx || this.config.polylineRad;\r\n    if (!Array.isArray(actualPoly[0])) {\r\n      for (let i = 0; i < actualPoly.length; i++) {\r\n        actualPoly.splice(i, 2, [actualPoly[i], actualPoly[i + 1]]);\r\n      }\r\n    }\r\n\r\n    // convert texture coordinates to spherical coordinates\r\n    if (this.isPolyPx()) {\r\n      this.props.def = actualPoly.map((coord) => {\r\n        const sphericalCoords = this.psv.dataHelper.textureCoordsToSphericalCoords({ x: coord[0], y: coord[1] });\r\n        return [sphericalCoords.longitude, sphericalCoords.latitude];\r\n      });\r\n    }\r\n    // clean angles\r\n    else {\r\n      this.props.def = actualPoly.map((coord) => {\r\n        return [utils.parseAngle(coord[0]), utils.parseAngle(coord[1], true)];\r\n      });\r\n    }\r\n\r\n    const centroid = this.isPolygon()\r\n      ? getPolygonCenter(this.props.def)\r\n      : getPolylineCenter(this.props.def);\r\n\r\n    this.props.position = {\r\n      longitude: centroid[0],\r\n      latitude : centroid[1],\r\n    };\r\n\r\n    // compute x/y/z positions\r\n    this.props.positions3D = this.props.def.map((coord) => {\r\n      return this.psv.dataHelper.sphericalCoordsToVector3({ longitude: coord[0], latitude: coord[1] });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Updates a 3D marker\r\n   * @private\r\n   */\r\n  __update3d() {\r\n    if (!this.config.width || !this.config.height) {\r\n      throw new PSVError('missing marker width/height');\r\n    }\r\n\r\n    this.props.dynamicSize = false;\r\n    this.props.width = this.config.width;\r\n    this.props.height = this.config.height;\r\n\r\n    // convert texture coordinates to spherical coordinates\r\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\r\n\r\n    // compute x/y/z position\r\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\r\n\r\n    switch (this.type) {\r\n      case MARKER_TYPES.imageLayer:\r\n        if (!this.$el) {\r\n          const material = new THREE.MeshBasicMaterial({\r\n            transparent: true,\r\n            opacity    : this.config.opacity ?? 1,\r\n            depthTest  : false,\r\n          });\r\n          const geometry = new THREE.PlaneGeometry(1, 1);\r\n          const mesh = new THREE.Mesh(geometry, material);\r\n          mesh.userData = { [MARKER_DATA]: this };\r\n          this.$el = new THREE.Group().add(mesh);\r\n\r\n          // overwrite the visible property to be tied to the Marker instance\r\n          // and do it without context bleed\r\n          Object.defineProperty(this.$el, 'visible', {\r\n            enumerable: true,\r\n            get       : function () {\r\n              return this.children[0].userData[MARKER_DATA].visible;\r\n            },\r\n            set       : function (visible) {\r\n              this.children[0].userData[MARKER_DATA].visible = visible;\r\n            },\r\n          });\r\n        }\r\n\r\n        if (this.props.def !== this.config.imageLayer) {\r\n          if (this.psv.config.requestHeaders && typeof this.psv.config.requestHeaders === 'function') {\r\n            this.loader.setRequestHeader(this.psv.config.requestHeaders(this.config.imageLayer));\r\n          }\r\n          this.$el.children[0].material.map = this.loader.load(this.config.imageLayer, (texture) => {\r\n            texture.anisotropy = 4;\r\n            this.psv.needsUpdate();\r\n          });\r\n          this.props.def = this.config.imageLayer;\r\n        }\r\n\r\n        this.$el.children[0].position.set(\r\n          this.props.anchor.x - 0.5,\r\n          this.props.anchor.y - 0.5,\r\n          0\r\n        );\r\n\r\n        this.$el.position.copy(this.props.positions3D[0]);\r\n\r\n        switch (this.config.orientation) {\r\n          case 'horizontal':\r\n            this.$el.lookAt(0, this.$el.position.y, 0);\r\n            this.$el.rotateX(this.props.position.latitude < 0 ? -Math.PI / 2 : Math.PI / 2);\r\n            break;\r\n          case 'vertical-left':\r\n            this.$el.lookAt(0, 0, 0);\r\n            this.$el.rotateY(-Math.PI * 0.4);\r\n            break;\r\n          case 'vertical-right':\r\n            this.$el.lookAt(0, 0, 0);\r\n            this.$el.rotateY(Math.PI * 0.4);\r\n            break;\r\n          default:\r\n            this.$el.lookAt(0, 0, 0);\r\n            break;\r\n        }\r\n\r\n        // 100 is magic number that gives a coherent size at default zoom level\r\n        this.$el.scale.set(this.config.width / 100, this.config.height / 100, 1);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Determines the type of a marker by the available properties\r\n   * @param {Marker.Properties} properties\r\n   * @param {boolean} [allowNone=false]\r\n   * @returns {string}\r\n   * @throws {PSV.PSVError} when the marker's type cannot be found\r\n   */\r\n  static getType(properties, allowNone = false) {\r\n    const found = [];\r\n\r\n    utils.each(MARKER_TYPES, (type) => {\r\n      if (properties[type]) {\r\n        found.push(type);\r\n      }\r\n    });\r\n\r\n    if (found.length === 0 && !allowNone) {\r\n      throw new PSVError(`missing marker content, either ${Object.keys(MARKER_TYPES).join(', ')}`);\r\n    }\r\n    else if (found.length > 1) {\r\n      throw new PSVError(`multiple marker content, either ${Object.keys(MARKER_TYPES).join(', ')}`);\r\n    }\r\n\r\n    return found[0];\r\n  }\r\n\r\n}\r\n","import { AbstractButton } from '../..';\r\nimport { EVENTS } from './constants';\r\nimport pin from './pin.svg';\r\n\r\n/**\r\n * @summary Navigation bar markers button class\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class MarkersButton extends AbstractButton {\r\n\r\n  static id = 'markers';\r\n  static icon = pin;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-markers-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.MarkersPlugin}\r\n     */\r\n    this.plugin = this.psv.getPlugin('markers');\r\n\r\n    if (this.plugin) {\r\n      this.plugin.on(EVENTS.SHOW_MARKERS, this);\r\n      this.plugin.on(EVENTS.HIDE_MARKERS, this);\r\n\r\n      this.toggleActive(true);\r\n    }\r\n\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    if (this.plugin) {\r\n      this.plugin.off(EVENTS.SHOW_MARKERS, this);\r\n      this.plugin.off(EVENTS.HIDE_MARKERS, this);\r\n    }\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !!this.plugin;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      // @formatter:off\r\n      case EVENTS.SHOW_MARKERS: this.toggleActive(true); break;\r\n      case EVENTS.HIDE_MARKERS: this.toggleActive(false); break;\r\n      // @formatter:on\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles markers\r\n   */\r\n  onClick() {\r\n    if (this.plugin.prop.visible) {\r\n      this.plugin.hide();\r\n    }\r\n    else {\r\n      this.plugin.show();\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractButton, CONSTANTS } from '../..';\r\nimport { ID_PANEL_MARKERS_LIST } from './constants';\r\nimport pinList from './pin-list.svg';\r\n\r\n/**\r\n * @summary Navigation bar markers list button class\r\n * @extends PSV.buttons.AbstractButton\r\n * @memberof PSV.buttons\r\n */\r\nexport class MarkersListButton extends AbstractButton {\r\n\r\n  static id = 'markersList';\r\n  static icon = pinList;\r\n\r\n  /**\r\n   * @param {PSV.components.Navbar} navbar\r\n   */\r\n  constructor(navbar) {\r\n    super(navbar, 'psv-button--hover-scale psv-markers-list-button', true);\r\n\r\n    /**\r\n     * @type {PSV.plugins.MarkersPlugin}\r\n     */\r\n    this.plugin = this.psv.getPlugin('markers');\r\n\r\n    if (this.plugin) {\r\n      this.psv.on(CONSTANTS.EVENTS.OPEN_PANEL, this);\r\n      this.psv.on(CONSTANTS.EVENTS.CLOSE_PANEL, this);\r\n    }\r\n\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.EVENTS.OPEN_PANEL, this);\r\n    this.psv.off(CONSTANTS.EVENTS.CLOSE_PANEL, this);\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isSupported() {\r\n    return !!this.plugin;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      // @formatter:off\r\n      case CONSTANTS.EVENTS.OPEN_PANEL:  this.toggleActive(e.args[0] === ID_PANEL_MARKERS_LIST); break;\r\n      case CONSTANTS.EVENTS.CLOSE_PANEL: this.toggleActive(false); break;\r\n      // @formatter:on\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @description Toggles markers list\r\n   */\r\n  onClick() {\r\n    this.plugin.toggleMarkersList();\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError, registerButton, utils } from '../..';\r\nimport {\r\n  EVENTS,\r\n  ID_PANEL_MARKER,\r\n  ID_PANEL_MARKERS_LIST,\r\n  MARKER_DATA,\r\n  MARKER_TOOLTIP_TRIGGER,\r\n  MARKERS_LIST_TEMPLATE,\r\n  SVG_NS\r\n} from './constants';\r\nimport { Marker } from './Marker';\r\nimport { MarkersButton } from './MarkersButton';\r\nimport { MarkersListButton } from './MarkersListButton';\r\nimport './style.scss';\r\n\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.MarkersPlugin.Options\r\n * @property {boolean} [clickEventOnMarker=false] If a `click` event is triggered on the viewer additionally to the `select-marker` event.\r\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers]\r\n */\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.MarkersPlugin.SelectMarkerData\r\n * @summary Data of the `select-marker` event\r\n * @property {boolean} dblclick - if the selection originated from a double click, the simple click is always fired before the double click\r\n * @property {boolean} rightclick - if the selection originated from a right click\r\n */\r\n\r\n\r\n// add markers buttons\r\nDEFAULTS.lang[MarkersButton.id] = 'Markers';\r\nDEFAULTS.lang[MarkersListButton.id] = 'Markers list';\r\nregisterButton(MarkersButton, 'caption:left');\r\nregisterButton(MarkersListButton, 'caption:left');\r\n\r\n\r\nexport { EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * @summary Displays various markers on the viewer\r\n * @extends PSV.plugins.AbstractPlugin\r\n * @memberof PSV.plugins\r\n */\r\nexport class MarkersPlugin extends AbstractPlugin {\r\n\r\n  static id = 'markers';\r\n\r\n  static EVENTS = EVENTS;\r\n\r\n  /**\r\n   * @param {PSV.Viewer} psv\r\n   * @param {PSV.plugins.MarkersPlugin.Options} [options]\r\n   */\r\n  constructor(psv, options) {\r\n    super(psv);\r\n\r\n    /**\r\n     * @summary All registered markers\r\n     * @member {Object<string, PSV.plugins.MarkersPlugin.Marker>}\r\n     */\r\n    this.markers = {};\r\n\r\n    /**\r\n     * @type {Object}\r\n     * @property {boolean} visible - Visibility of the component\r\n     * @property {PSV.plugins.MarkersPlugin.Marker} currentMarker - Last selected marker\r\n     * @property {PSV.plugins.MarkersPlugin.Marker} hoveringMarker - Marker under the cursor\r\n     * @private\r\n     */\r\n    this.prop = {\r\n      visible       : true,\r\n      currentMarker : null,\r\n      hoveringMarker: null,\r\n      stopObserver  : null,\r\n    };\r\n\r\n    /**\r\n     * @type {PSV.plugins.MarkersPlugin.Options}\r\n     */\r\n    this.config = {\r\n      clickEventOnMarker: false,\r\n      ...options,\r\n    };\r\n\r\n    if (options?.listButton === false || options?.hideButton === false) {\r\n      utils.logWarn('MarkersPlugin: listButton and hideButton options are deprecated. '\r\n        + 'Please define the global navbar options according to your needs.');\r\n    }\r\n\r\n    /**\r\n     * @member {HTMLElement}\r\n     * @readonly\r\n     */\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'psv-markers';\r\n    this.container.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\r\n\r\n    /**\r\n     * @member {SVGElement}\r\n     * @readonly\r\n     */\r\n    this.svgContainer = document.createElementNS(SVG_NS, 'svg');\r\n    this.svgContainer.setAttribute('class', 'psv-markers-svg-container');\r\n    this.container.appendChild(this.svgContainer);\r\n\r\n    // Markers events via delegation\r\n    this.container.addEventListener('mouseenter', this, true);\r\n    this.container.addEventListener('mouseleave', this, true);\r\n    this.container.addEventListener('mousemove', this, true);\r\n    this.container.addEventListener('contextmenu', this);\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  init() {\r\n    super.init();\r\n\r\n    this.psv.container.appendChild(this.container);\r\n\r\n    // Viewer events\r\n    this.psv.on(CONSTANTS.EVENTS.CLICK, this);\r\n    this.psv.on(CONSTANTS.EVENTS.DOUBLE_CLICK, this);\r\n    this.psv.on(CONSTANTS.EVENTS.RENDER, this);\r\n    this.psv.on(CONSTANTS.EVENTS.CONFIG_CHANGED, this);\r\n\r\n    if (this.config.markers) {\r\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\r\n        this.setMarkers(this.config.markers);\r\n        delete this.config.markers;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  destroy() {\r\n    this.clearMarkers(false);\r\n\r\n    this.prop.stopObserver?.();\r\n\r\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\r\n    this.psv.off(CONSTANTS.EVENTS.DOUBLE_CLICK, this);\r\n    this.psv.off(CONSTANTS.EVENTS.RENDER, this);\r\n    this.psv.off(CONSTANTS.EVENTS.CONFIG_CHANGED, this);\r\n\r\n    this.psv.container.removeChild(this.container);\r\n\r\n    delete this.svgContainer;\r\n    delete this.markers;\r\n    delete this.container;\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @summary Handles events\r\n   * @param {Event} e\r\n   * @private\r\n   */\r\n  handleEvent(e) {\r\n    /* eslint-disable */\r\n    switch (e.type) {\r\n      // @formatter:off\r\n      case 'mouseenter':  this.__onMouseEnter(e, this.__getTargetMarker(e.target)); break;\r\n      case 'mouseleave':  this.__onMouseLeave(e, this.__getTargetMarker(e.target)); break;\r\n      case 'mousemove':   this.__onMouseMove(e, this.__getTargetMarker(e.target));  break;\r\n      case 'contextmenu': e.preventDefault(); break;\r\n      case CONSTANTS.EVENTS.CLICK:        this.__onClick(e, e.args[0], false); break;\r\n      case CONSTANTS.EVENTS.DOUBLE_CLICK: this.__onClick(e, e.args[0], true);  break;\r\n      case CONSTANTS.EVENTS.RENDER:       this.renderMarkers();                        break;\r\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT: this.__onMouseEnter(e.detail.originalEvent, e.detail.data); break;\r\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT: this.__onMouseLeave(e.detail.originalEvent, e.detail.data); break;\r\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT: this.__onMouseMove(e.detail.originalEvent, e.detail.data);  break;\r\n      case CONSTANTS.EVENTS.CONFIG_CHANGED:\r\n        this.container.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\r\n        break;\r\n      // @formatter:on\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * @summary Shows all markers\r\n   * @fires PSV.plugins.MarkersPlugin.show-markers\r\n   */\r\n  show() {\r\n    this.prop.visible = true;\r\n\r\n    this.renderMarkers();\r\n\r\n    this.trigger(EVENTS.SHOW_MARKERS);\r\n  }\r\n\r\n  /**\r\n   * @summary Hides all markers\r\n   * @fires PSV.plugins.MarkersPlugin.hide-markers\r\n   */\r\n  hide() {\r\n    this.prop.visible = false;\r\n\r\n    this.renderMarkers();\r\n\r\n    this.trigger(EVENTS.HIDE_MARKERS);\r\n  }\r\n\r\n  /**\r\n   * @summary Toggles the visibility of all tooltips\r\n   */\r\n  toggleAllTooltips() {\r\n    if (this.prop.showAllTooltips) {\r\n      this.hideAllTooltips();\r\n    }\r\n    else {\r\n      this.showAllTooltips();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Displays all tooltips\r\n   */\r\n  showAllTooltips() {\r\n    this.prop.showAllTooltips = true;\r\n    utils.each(this.markers, (marker) => {\r\n      marker.props.staticTooltip = true;\r\n      marker.showTooltip();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Hides all tooltips\r\n   */\r\n  hideAllTooltips() {\r\n    this.prop.showAllTooltips = false;\r\n    utils.each(this.markers, (marker) => {\r\n      marker.props.staticTooltip = false;\r\n      marker.hideTooltip();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the total number of markers\r\n   * @returns {number}\r\n   */\r\n  getNbMarkers() {\r\n    return Object.keys(this.markers).length;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns all the markers\r\n   * @return {PSV.plugins.MarkersPlugin.Marker[]}\r\n   */\r\n  getMarkers() {\r\n    return Object.values(this.markers);\r\n  }\r\n\r\n  /**\r\n   * @summary Adds a new marker to viewer\r\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\r\n   * @param {boolean} [render=true] - renders the marker immediately\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\r\n   * @throws {PSV.PSVError} when the marker's id is missing or already exists\r\n   */\r\n  addMarker(properties, render = true) {\r\n    if (this.markers[properties.id]) {\r\n      throw new PSVError(`marker \"${properties.id}\" already exists`);\r\n    }\r\n\r\n    const marker = new Marker(properties, this.psv);\r\n\r\n    if (marker.isNormal()) {\r\n      this.container.appendChild(marker.$el);\r\n    }\r\n    else if (marker.isPoly() || marker.isSvg()) {\r\n      this.svgContainer.appendChild(marker.$el);\r\n    }\r\n    else if (marker.is3d()) {\r\n      this.psv.renderer.scene.add(marker.$el);\r\n    }\r\n\r\n    this.markers[marker.id] = marker;\r\n\r\n    if (render) {\r\n      this.renderMarkers();\r\n      this.__refreshUi();\r\n      this.__checkObjectsObserver();\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n\r\n    return marker;\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the internal marker object for a marker id\r\n   * @param {string} markerId\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\r\n   * @throws {PSV.PSVError} when the marker cannot be found\r\n   */\r\n  getMarker(markerId) {\r\n    const id = typeof markerId === 'object' ? markerId.id : markerId;\r\n\r\n    if (!this.markers[id]) {\r\n      throw new PSVError(`cannot find marker \"${id}\"`);\r\n    }\r\n\r\n    return this.markers[id];\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the last marker selected by the user\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\r\n   */\r\n  getCurrentMarker() {\r\n    return this.prop.currentMarker;\r\n  }\r\n\r\n  /**\r\n   * @summary Updates the existing marker with the same id\r\n   * @description Every property can be changed but you can't change its type (Eg: `image` to `html`).\r\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\r\n   * @param {boolean} [render=true] - renders the marker immediately\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\r\n   */\r\n  updateMarker(properties, render = true) {\r\n    const marker = this.getMarker(properties.id);\r\n\r\n    marker.update(properties);\r\n\r\n    if (render) {\r\n      this.renderMarkers();\r\n      this.__refreshUi();\r\n\r\n      if (marker.is3d()) {\r\n        this.psv.needsUpdate();\r\n      }\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n\r\n    return marker;\r\n  }\r\n\r\n  /**\r\n   * @summary Removes a marker from the viewer\r\n   * @param {string} markerId\r\n   * @param {boolean} [render=true] - renders the marker immediately\r\n   */\r\n  removeMarker(markerId, render = true) {\r\n    const marker = this.getMarker(markerId);\r\n\r\n    if (marker.isNormal()) {\r\n      this.container.removeChild(marker.$el);\r\n    }\r\n    else if (marker.isPoly() || marker.isSvg()) {\r\n      this.svgContainer.removeChild(marker.$el);\r\n    }\r\n    else if (marker.is3d()) {\r\n      this.psv.renderer.scene.remove(marker.$el);\r\n      this.psv.needsUpdate();\r\n    }\r\n\r\n    if (this.prop.hoveringMarker === marker) {\r\n      this.prop.hoveringMarker = null;\r\n    }\r\n\r\n    if (this.prop.currentMarker === marker) {\r\n      this.prop.currentMarker = null;\r\n    }\r\n\r\n    marker.hideTooltip();\r\n\r\n    marker.destroy();\r\n    delete this.markers[marker.id];\r\n\r\n    if (render) {\r\n      this.__refreshUi();\r\n      this.__checkObjectsObserver();\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Removes multiple markers\r\n   * @param {string[]} markerIds\r\n   * @param {boolean} [render=true] - renders the markers immediately\r\n   */\r\n  removeMarkers(markerIds, render = true) {\r\n    markerIds.forEach(markerId => this.removeMarker(markerId, false));\r\n\r\n    if (render) {\r\n      this.__refreshUi();\r\n      this.__checkObjectsObserver();\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Replaces all markers\r\n   * @param {PSV.plugins.MarkersPlugin.Properties[]} markers\r\n   * @param {boolean} [render=true] - renders the marker immediately\r\n   */\r\n  setMarkers(markers, render = true) {\r\n    this.clearMarkers(false);\r\n\r\n    utils.each(markers, marker => this.addMarker(marker, false));\r\n\r\n    if (render) {\r\n      this.renderMarkers();\r\n      this.__refreshUi();\r\n      this.__checkObjectsObserver();\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Removes all markers\r\n   * @param {boolean} [render=true] - renders the markers immediately\r\n   */\r\n  clearMarkers(render = true) {\r\n    utils.each(this.markers, marker => this.removeMarker(marker, false));\r\n\r\n    if (render) {\r\n      this.renderMarkers();\r\n      this.__refreshUi();\r\n      this.__checkObjectsObserver();\r\n\r\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Rotate the view to face the marker\r\n   * @param {string} markerId\r\n   * @param {string|number} [speed] - rotates smoothy, see {@link PSV.Viewer#animate}\r\n   * @fires PSV.plugins.MarkersPlugin.goto-marker-done\r\n   * @return {PSV.Animation}  A promise that will be resolved when the animation finishes\r\n   */\r\n  gotoMarker(markerId, speed) {\r\n    const marker = this.getMarker(markerId);\r\n\r\n    return this.psv.animate({\r\n      ...marker.props.position,\r\n      speed,\r\n    })\r\n      .then(() => {\r\n        this.trigger(EVENTS.GOTO_MARKER_DONE, marker);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @summary Hides a marker\r\n   * @param {string} markerId\r\n   */\r\n  hideMarker(markerId) {\r\n    this.toggleMarker(markerId, false);\r\n  }\r\n\r\n  /**\r\n   * @summary Shows a marker\r\n   * @param {string} markerId\r\n   */\r\n  showMarker(markerId) {\r\n    this.toggleMarker(markerId, true);\r\n  }\r\n\r\n  /**\r\n   * @summary Forces the display of the tooltip\r\n   * @param {string} markerId\r\n   */\r\n  showMarkerTooltip(markerId) {\r\n    const marker = this.getMarker(markerId);\r\n    marker.props.staticTooltip = true;\r\n    marker.showTooltip();\r\n  }\r\n\r\n  /**\r\n   * @summary Hides the tooltip\r\n   * @param {string} markerId\r\n   */\r\n  hideMarkerTooltip(markerId) {\r\n    const marker = this.getMarker(markerId);\r\n    marker.props.staticTooltip = false;\r\n    marker.hideTooltip();\r\n  }\r\n\r\n  /**\r\n   * @summary Toggles a marker\r\n   * @param {string} markerId\r\n   * @param {boolean} [visible]\r\n   */\r\n  toggleMarker(markerId, visible = null) {\r\n    const marker = this.getMarker(markerId);\r\n    marker.visible = visible === null ? !marker.visible : visible;\r\n    if (marker.is3d()) {\r\n      this.psv.needsUpdate();\r\n    }\r\n    else {\r\n      this.renderMarkers();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Opens the panel with the content of the marker\r\n   * @param {string} markerId\r\n   */\r\n  showMarkerPanel(markerId) {\r\n    const marker = this.getMarker(markerId);\r\n\r\n    if (marker?.config?.content) {\r\n      this.psv.panel.show({\r\n        id     : ID_PANEL_MARKER,\r\n        content: marker.config.content,\r\n      });\r\n    }\r\n    else {\r\n      this.psv.panel.hide(ID_PANEL_MARKER);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Toggles the visibility of the list of markers\r\n   */\r\n  toggleMarkersList() {\r\n    if (this.psv.panel.prop.contentId === ID_PANEL_MARKERS_LIST) {\r\n      this.hideMarkersList();\r\n    }\r\n    else {\r\n      this.showMarkersList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Opens side panel with the list of markers\r\n   * @fires PSV.plugins.MarkersPlugin.filter:render-markers-list\r\n   */\r\n  showMarkersList() {\r\n    let markers = [];\r\n    utils.each(this.markers, (marker) => {\r\n      if (marker.visible && !marker.config.hideList) {\r\n        markers.push(marker);\r\n      }\r\n    });\r\n\r\n    markers = this.change(EVENTS.RENDER_MARKERS_LIST, markers);\r\n\r\n    this.psv.panel.show({\r\n      id          : ID_PANEL_MARKERS_LIST,\r\n      content     : MARKERS_LIST_TEMPLATE(\r\n        markers,\r\n        this.psv.config.lang[MarkersButton.id],\r\n        utils.dasherize(MARKER_DATA)\r\n      ),\r\n      noMargin    : true,\r\n      clickHandler: (e) => {\r\n        const li = e.target ? utils.getClosest(e.target, 'li') : undefined;\r\n        const markerId = li ? li.dataset[MARKER_DATA] : undefined;\r\n\r\n        if (markerId) {\r\n          const marker = this.getMarker(markerId);\r\n\r\n          this.trigger(EVENTS.SELECT_MARKER_LIST, marker);\r\n\r\n          this.gotoMarker(marker, 1000);\r\n          this.hideMarkersList();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Closes side panel if it contains the list of markers\r\n   */\r\n  hideMarkersList() {\r\n    this.psv.panel.hide(ID_PANEL_MARKERS_LIST);\r\n  }\r\n\r\n  /**\r\n   * @summary Updates the visibility and the position of all markers\r\n   */\r\n  renderMarkers() {\r\n    const zoomLevel = this.psv.getZoomLevel();\r\n    const viewerPosition = this.psv.getPosition();\r\n\r\n    utils.each(this.markers, (marker) => {\r\n      let isVisible = this.prop.visible && marker.visible;\r\n      let visibilityChanged = false;\r\n      let position = null;\r\n\r\n      if (isVisible && marker.is3d()) {\r\n        position = this.__getMarkerPosition(marker);\r\n        isVisible = this.__isMarkerVisible(marker, position);\r\n      }\r\n      else if (isVisible && marker.isPoly()) {\r\n        const positions = this.__getPolyPositions(marker);\r\n        isVisible = positions.length > (marker.isPolygon() ? 2 : 1);\r\n\r\n        if (isVisible) {\r\n          position = this.__getMarkerPosition(marker);\r\n\r\n          const points = positions.map(pos => (pos.x - position.x) + ',' + (pos.y - position.y)).join(' ');\r\n\r\n          marker.$el.setAttributeNS(null, 'points', points);\r\n          marker.$el.setAttributeNS(null, 'transform', `translate(${position.x} ${position.y})`);\r\n        }\r\n      }\r\n      else if (isVisible) {\r\n        if (marker.props.dynamicSize) {\r\n          this.__updateMarkerSize(marker);\r\n        }\r\n\r\n        position = this.__getMarkerPosition(marker);\r\n        isVisible = this.__isMarkerVisible(marker, position);\r\n\r\n        if (isVisible) {\r\n          const scale = marker.getScale(zoomLevel, viewerPosition);\r\n\r\n          if (marker.isSvg()) {\r\n            // simulate transform-origin relative to SVG element\r\n            const x = position.x + marker.props.width * marker.props.anchor.x * (1 - scale);\r\n            const y = position.y + marker.props.width * marker.props.anchor.y * (1 - scale);\r\n            marker.$el.setAttributeNS(null, 'transform', `translate(${x}, ${y}) scale(${scale}, ${scale})`);\r\n          }\r\n          else {\r\n            marker.$el.style.transform = `translate3D(${position.x}px, ${position.y}px, 0px) scale(${scale}, ${scale})`;\r\n          }\r\n        }\r\n      }\r\n\r\n      visibilityChanged = marker.props.visible !== isVisible;\r\n      marker.props.visible = isVisible;\r\n      marker.props.position2D = isVisible ? position : null;\r\n\r\n      if (!marker.is3d()) {\r\n        utils.toggleClass(marker.$el, 'psv-marker--visible', isVisible);\r\n      }\r\n\r\n      if (!isVisible) {\r\n        marker.hideTooltip();\r\n      }\r\n      else if (marker.props.staticTooltip) {\r\n        marker.showTooltip();\r\n      }\r\n      else if (marker.config.tooltip.trigger === MARKER_TOOLTIP_TRIGGER.click || (marker === this.prop.hoveringMarker && !marker.isPoly())) {\r\n        marker.refreshTooltip();\r\n      }\r\n      else if (marker !== this.prop.hoveringMarker) {\r\n        marker.hideTooltip();\r\n      }\r\n\r\n      if (visibilityChanged) {\r\n        this.trigger(EVENTS.MARKER_VISIBILITY, marker, isVisible);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Determines if a point marker is visible<br>\r\n   * It tests if the point is in the general direction of the camera, then check if it's in the viewport\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @param {PSV.Point} position\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  __isMarkerVisible(marker, position) {\r\n    return marker.props.positions3D[0].dot(this.psv.prop.direction) > 0\r\n      && position.x + marker.props.width >= 0\r\n      && position.x - marker.props.width <= this.psv.prop.size.width\r\n      && position.y + marker.props.height >= 0\r\n      && position.y - marker.props.height <= this.psv.prop.size.height;\r\n  }\r\n\r\n  /**\r\n   * @summary Computes the real size of a marker\r\n   * @description This is done by removing all it's transformations (if any) and making it visible\r\n   * before querying its bounding rect\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @private\r\n   */\r\n  __updateMarkerSize(marker) {\r\n    utils.addClasses(marker.$el, 'psv-marker--transparent');\r\n\r\n    let transform;\r\n    if (marker.isSvg()) {\r\n      transform = marker.$el.getAttributeNS(null, 'transform');\r\n      marker.$el.removeAttributeNS(null, 'transform');\r\n    }\r\n    else {\r\n      transform = marker.$el.style.transform;\r\n      marker.$el.style.transform = '';\r\n    }\r\n\r\n    const rect = marker.$el.getBoundingClientRect();\r\n    marker.props.width = rect.width;\r\n    marker.props.height = rect.height;\r\n\r\n    utils.removeClasses(marker.$el, 'psv-marker--transparent');\r\n\r\n    if (transform) {\r\n      if (marker.isSvg()) {\r\n        marker.$el.setAttributeNS(null, 'transform', transform);\r\n      }\r\n      else {\r\n        marker.$el.style.transform = transform;\r\n      }\r\n    }\r\n\r\n    // the size is no longer dynamic once known\r\n    marker.props.dynamicSize = false;\r\n  }\r\n\r\n  /**\r\n   * @summary Computes viewer coordinates of a marker\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @returns {PSV.Point}\r\n   * @private\r\n   */\r\n  __getMarkerPosition(marker) {\r\n    if (marker.isPoly()) {\r\n      return this.psv.dataHelper.sphericalCoordsToViewerCoords(marker.props.position);\r\n    }\r\n    else {\r\n      const position = this.psv.dataHelper.vector3ToViewerCoords(marker.props.positions3D[0]);\r\n\r\n      position.x -= marker.props.width * marker.props.anchor.x;\r\n      position.y -= marker.props.height * marker.props.anchor.y;\r\n\r\n      return position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Computes viewer coordinates of each point of a polygon/polyline<br>\r\n   * It handles points behind the camera by creating intermediary points suitable for the projector\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\r\n   * @returns {PSV.Point[]}\r\n   * @private\r\n   */\r\n  __getPolyPositions(marker) {\r\n    const nbVectors = marker.props.positions3D.length;\r\n\r\n    // compute if each vector is visible\r\n    const positions3D = marker.props.positions3D.map((vector) => {\r\n      return {\r\n        vector : vector,\r\n        visible: vector.dot(this.psv.prop.direction) > 0,\r\n      };\r\n    });\r\n\r\n    // get pairs of visible/invisible vectors for each invisible vector connected to a visible vector\r\n    const toBeComputed = [];\r\n    positions3D.forEach((pos, i) => {\r\n      if (!pos.visible) {\r\n        const neighbours = [\r\n          i === 0 ? positions3D[nbVectors - 1] : positions3D[i - 1],\r\n          i === nbVectors - 1 ? positions3D[0] : positions3D[i + 1],\r\n        ];\r\n\r\n        neighbours.forEach((neighbour) => {\r\n          if (neighbour.visible) {\r\n            toBeComputed.push({\r\n              visible  : neighbour,\r\n              invisible: pos,\r\n              index    : i,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // compute intermediary vector for each pair (the loop is reversed for splice to insert at the right place)\r\n    toBeComputed.reverse().forEach((pair) => {\r\n      positions3D.splice(pair.index, 0, {\r\n        vector : this.__getPolyIntermediaryPoint(pair.visible.vector, pair.invisible.vector),\r\n        visible: true,\r\n      });\r\n    });\r\n\r\n    // translate vectors to screen pos\r\n    return positions3D\r\n      .filter(pos => pos.visible)\r\n      .map(pos => this.psv.dataHelper.vector3ToViewerCoords(pos.vector));\r\n  }\r\n\r\n  /**\r\n   * Given one point in the same direction of the camera and one point behind the camera,\r\n   * computes an intermediary point on the great circle delimiting the half sphere visible by the camera.\r\n   * The point is shifted by .01 rad because the projector cannot handle points exactly on this circle.\r\n   * TODO : does not work with fisheye view (must not use the great circle)\r\n   * {@link http://math.stackexchange.com/a/1730410/327208}\r\n   * @param P1 {external:THREE.Vector3}\r\n   * @param P2 {external:THREE.Vector3}\r\n   * @returns {external:THREE.Vector3}\r\n   * @private\r\n   */\r\n  __getPolyIntermediaryPoint(P1, P2) {\r\n    const C = this.psv.prop.direction.clone().normalize();\r\n    const N = new THREE.Vector3().crossVectors(P1, P2).normalize();\r\n    const V = new THREE.Vector3().crossVectors(N, P1).normalize();\r\n    const X = P1.clone().multiplyScalar(-C.dot(V));\r\n    const Y = V.clone().multiplyScalar(C.dot(P1));\r\n    const H = new THREE.Vector3().addVectors(X, Y).normalize();\r\n    const a = new THREE.Vector3().crossVectors(H, C);\r\n    return H.applyAxisAngle(a, 0.01).multiplyScalar(CONSTANTS.SPHERE_RADIUS);\r\n  }\r\n\r\n  /**\r\n   * @summary Returns the marker associated to an event target\r\n   * @param {EventTarget} target\r\n   * @param {boolean} [closest=false]\r\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\r\n   * @private\r\n   */\r\n  __getTargetMarker(target, closest = false) {\r\n    const target2 = closest ? utils.getClosest(target, '.psv-marker') : target;\r\n    return target2 ? target2[MARKER_DATA] : undefined;\r\n  }\r\n\r\n  /**\r\n   * @summary Checks if an event target is in the tooltip\r\n   * @param {EventTarget} target\r\n   * @param {PSV.components.Tooltip} tooltip\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  __targetOnTooltip(target, tooltip) {\r\n    return target && tooltip ? utils.hasParent(target, tooltip.container) : false;\r\n  }\r\n\r\n  /**\r\n   * @summary Handles mouse enter events, show the tooltip for non polygon markers\r\n   * @param {MouseEvent} e\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} [marker]\r\n   * @fires PSV.plugins.MarkersPlugin.over-marker\r\n   * @private\r\n   */\r\n  __onMouseEnter(e, marker) {\r\n    if (marker && !marker.isPoly()) {\r\n      this.prop.hoveringMarker = marker;\r\n\r\n      this.trigger(EVENTS.OVER_MARKER, marker);\r\n\r\n      if (!marker.props.staticTooltip && marker.config.tooltip.trigger === MARKER_TOOLTIP_TRIGGER.hover) {\r\n        marker.showTooltip(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Handles mouse leave events, hide the tooltip\r\n   * @param {MouseEvent} e\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} [marker]\r\n   * @fires PSV.plugins.MarkersPlugin.leave-marker\r\n   * @private\r\n   */\r\n  __onMouseLeave(e, marker) {\r\n    // do not hide if we enter the tooltip itself while hovering a polygon\r\n    if (marker && !(marker.isPoly() && this.__targetOnTooltip(e.relatedTarget, marker.tooltip))) {\r\n      this.trigger(EVENTS.LEAVE_MARKER, marker);\r\n\r\n      this.prop.hoveringMarker = null;\r\n\r\n      if (!marker.props.staticTooltip && marker.config.tooltip.trigger === MARKER_TOOLTIP_TRIGGER.hover) {\r\n        marker.hideTooltip();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Handles mouse move events, refreshUi the tooltip for polygon markers\r\n   * @param {MouseEvent} e\r\n   * @param {PSV.plugins.MarkersPlugin.Marker} [targetMarker]\r\n   * @fires PSV.plugins.MarkersPlugin.leave-marker\r\n   * @fires PSV.plugins.MarkersPlugin.over-marker\r\n   * @private\r\n   */\r\n  __onMouseMove(e, targetMarker) {\r\n    let marker;\r\n\r\n    if (targetMarker?.isPoly()) {\r\n      marker = targetMarker;\r\n    }\r\n    // do not hide if we enter the tooltip itself while hovering a polygon\r\n    else if (this.prop.hoveringMarker && this.__targetOnTooltip(e.target, this.prop.hoveringMarker.tooltip)) {\r\n      marker = this.prop.hoveringMarker;\r\n    }\r\n\r\n    if (marker) {\r\n      if (!this.prop.hoveringMarker) {\r\n        this.trigger(EVENTS.OVER_MARKER, marker);\r\n\r\n        this.prop.hoveringMarker = marker;\r\n      }\r\n\r\n      if (!marker.props.staticTooltip) {\r\n        marker.showTooltip(e);\r\n      }\r\n    }\r\n    else if (this.prop.hoveringMarker?.isPoly()) {\r\n      this.trigger(EVENTS.LEAVE_MARKER, this.prop.hoveringMarker);\r\n\r\n      if (!this.prop.hoveringMarker.props.staticTooltip) {\r\n        this.prop.hoveringMarker.hideTooltip();\r\n      }\r\n\r\n      this.prop.hoveringMarker = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Handles mouse click events, select the marker and open the panel if necessary\r\n   * @param {Event} e\r\n   * @param {Object} data\r\n   * @param {boolean} dblclick\r\n   * @fires PSV.plugins.MarkersPlugin.select-marker\r\n   * @fires PSV.plugins.MarkersPlugin.unselect-marker\r\n   * @private\r\n   */\r\n  __onClick(e, data, dblclick) {\r\n    let marker = data.objects.find(o => o.userData[MARKER_DATA])?.userData[MARKER_DATA];\r\n\r\n    if (!marker) {\r\n      marker = this.__getTargetMarker(data.target, true);\r\n    }\r\n\r\n    if (this.prop.currentMarker && this.prop.currentMarker !== marker) {\r\n      this.trigger(EVENTS.UNSELECT_MARKER, this.prop.currentMarker);\r\n\r\n      this.psv.panel.hide(ID_PANEL_MARKER);\r\n\r\n      if (!this.prop.showAllTooltips && this.prop.currentMarker.config.tooltip.trigger === MARKER_TOOLTIP_TRIGGER.click) {\r\n        this.hideMarkerTooltip(this.prop.currentMarker);\r\n      }\r\n\r\n      this.prop.currentMarker = null;\r\n    }\r\n\r\n    if (marker) {\r\n      this.prop.currentMarker = marker;\r\n\r\n      this.trigger(EVENTS.SELECT_MARKER, marker, {\r\n        dblclick  : dblclick,\r\n        rightclick: data.rightclick,\r\n      });\r\n\r\n      if (this.config.clickEventOnMarker) {\r\n        // add the marker to event data\r\n        data.marker = marker;\r\n      }\r\n      else {\r\n        e.stopPropagation();\r\n      }\r\n\r\n      // the marker could have been deleted in an event handler\r\n      if (this.markers[marker.id]) {\r\n        if (marker.config.tooltip.trigger === MARKER_TOOLTIP_TRIGGER.click) {\r\n          if (marker.tooltip) {\r\n            this.hideMarkerTooltip(marker);\r\n          }\r\n          else {\r\n            this.showMarkerTooltip(marker);\r\n          }\r\n        }\r\n        else {\r\n          this.showMarkerPanel(marker.id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Updates the visiblity of the panel and the buttons\r\n   * @private\r\n   */\r\n  __refreshUi() {\r\n    const nbMarkers = Object.values(this.markers).filter(m => !m.config.hideList).length;\r\n    const markersButton = this.psv.navbar.getButton(MarkersButton.id, false);\r\n    const markersListButton = this.psv.navbar.getButton(MarkersListButton.id, false);\r\n\r\n    if (nbMarkers === 0) {\r\n      markersButton?.hide();\r\n      markersListButton?.hide();\r\n\r\n      if (this.psv.panel.isVisible(ID_PANEL_MARKERS_LIST)) {\r\n        this.psv.panel.hide();\r\n      }\r\n      else if (this.psv.panel.isVisible(ID_PANEL_MARKER)) {\r\n        this.psv.panel.hide();\r\n      }\r\n    }\r\n    else {\r\n      markersButton?.show();\r\n      markersListButton?.show();\r\n\r\n      if (this.psv.panel.isVisible(ID_PANEL_MARKERS_LIST)) {\r\n        this.showMarkersList();\r\n      }\r\n      else if (this.psv.panel.isVisible(ID_PANEL_MARKER)) {\r\n        this.prop.currentMarker ? this.showMarkerPanel(this.prop.currentMarker) : this.psv.panel.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Adds or remove the objects observer if there are 3D markers\r\n   * @private\r\n   */\r\n  __checkObjectsObserver() {\r\n    const has3d = Object.values(this.markers).some(marker => marker.is3d());\r\n\r\n    if (!has3d && this.prop.stopObserver) {\r\n      this.prop.stopObserver();\r\n      this.prop.stopObserver = null;\r\n    }\r\n    else if (has3d && !this.prop.stopObserver) {\r\n      this.prop.stopObserver = this.psv.observeObjects(MARKER_DATA, this);\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":["EVENTS","MARKER_VISIBILITY","GOTO_MARKER_DONE","LEAVE_MARKER","OVER_MARKER","RENDER_MARKERS_LIST","SELECT_MARKER","SELECT_MARKER_LIST","UNSELECT_MARKER","HIDE_MARKERS","SET_MARKERS","SHOW_MARKERS","MARKER_TOOLTIP_TRIGGER","click","hover","SVG_NS","MARKER_DATA","ID_PANEL_MARKER","ID_PANEL_MARKERS_LIST","MARKERS_LIST_TEMPLATE","markers","title","dataKey","icon","map","marker","config","id","type","image","getListContent","join","getShortestArc","from","to","tCandidates","Math","PI","reduce","value","candidate","newCandidate","abs","Infinity","PSVError","message","Error","captureStackTrace","stack","prototype","Object","create","name","constructor","logWarn","console","warn","THREE","Quaternion","greatArcIntermediaryPoint","p1","p2","f","λ1","φ1","λ2","φ2","r","utils","greatArcDistance","a","sin","b","x","cos","y","z","atan2","sqrt","getPolygonCenter","polygon","workPoints","k","i","length","d","push","sum","intermediary","point","parseAngle","getPolylineCenter","polyline","lengths","l","CONSTANTS","SPHERE_RADIUS","consumed","j","round","MARKER_TYPES","imageLayer","html","polygonPx","polygonRad","polylinePx","polylineRad","square","rect","circle","ellipse","path","Marker","properties","psv","getType","visible","$el","data","undefined","tooltip","props","dynamicSize","anchor","staticTooltip","position","position2D","positions3D","width","height","def","loader","is3d","TextureLoader","withCredentials","setWithCredentials","requestHeaders","setRequestHeader","isNormal","document","createElement","isPolygon","createElementNS","isPolyline","isSvg","update","destroy","isPoly","isPolyPx","isPolyRad","getScale","zoomLevel","scale","Array","isArray","zoom","bounds","EASINGS","inQuad","longitude","halfFov","MathUtils","degToRad","prop","hFov","arc","outQuad","max","listContent","content","showTooltip","mousePosition","viewerPos","getPosition","container","box","size","arrow","top","clientY","left","clientX","move","refreshTooltip","hideTooltip","hide","newType","deepmerge","trigger","setAttribute","className","addClasses","style","opacity","parsePosition","__updateNormal","__updatePoly","__updateSvg","__update3d","isExtendedPosition","backgroundImage","innerHTML","transformOrigin","dataHelper","cleanPosition","sphericalCoordsToVector3","cx","cy","rx","ry","each","setAttributeNS","svgStyle","dasherize","fill","actualPoly","splice","coord","sphericalCoords","textureCoordsToSphericalCoords","latitude","centroid","material","MeshBasicMaterial","transparent","depthTest","geometry","PlaneGeometry","mesh","Mesh","userData","Group","add","defineProperty","enumerable","get","children","set","load","texture","anisotropy","needsUpdate","copy","orientation","lookAt","rotateX","rotateY","allowNone","found","keys","MarkersButton","navbar","plugin","getPlugin","on","toggleActive","off","isSupported","handleEvent","e","onClick","show","AbstractButton","pin","MarkersListButton","OPEN_PANEL","CLOSE_PANEL","args","toggleMarkersList","pinList","DEFAULTS","lang","registerButton","MarkersPlugin","options","currentMarker","hoveringMarker","stopObserver","clickEventOnMarker","listButton","hideButton","cursor","mousemove","svgContainer","appendChild","addEventListener","init","CLICK","DOUBLE_CLICK","RENDER","CONFIG_CHANGED","once","READY","setMarkers","clearMarkers","removeChild","__onMouseEnter","__getTargetMarker","target","__onMouseLeave","__onMouseMove","preventDefault","__onClick","renderMarkers","OBJECT_EVENTS","ENTER_OBJECT","detail","originalEvent","LEAVE_OBJECT","HOVER_OBJECT","toggleAllTooltips","showAllTooltips","hideAllTooltips","getNbMarkers","getMarkers","values","addMarker","render","renderer","scene","__refreshUi","__checkObjectsObserver","getMarker","markerId","getCurrentMarker","updateMarker","removeMarker","remove","removeMarkers","markerIds","forEach","gotoMarker","speed","animate","then","hideMarker","toggleMarker","showMarker","showMarkerTooltip","hideMarkerTooltip","showMarkerPanel","panel","contentId","hideMarkersList","showMarkersList","hideList","change","noMargin","clickHandler","li","getClosest","dataset","getZoomLevel","viewerPosition","isVisible","visibilityChanged","__getMarkerPosition","__isMarkerVisible","positions","__getPolyPositions","points","pos","__updateMarkerSize","transform","toggleClass","dot","direction","getAttributeNS","removeAttributeNS","getBoundingClientRect","removeClasses","sphericalCoordsToViewerCoords","vector3ToViewerCoords","nbVectors","vector","toBeComputed","neighbours","neighbour","invisible","index","reverse","pair","__getPolyIntermediaryPoint","filter","P1","P2","C","clone","normalize","N","Vector3","crossVectors","V","X","multiplyScalar","Y","H","addVectors","applyAxisAngle","closest","target2","__targetOnTooltip","hasParent","relatedTarget","targetMarker","dblclick","objects","find","o","rightclick","stopPropagation","nbMarkers","m","markersButton","getButton","markersListButton","has3d","some","observeObjects","AbstractPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMA,MAAM,GAAG;AACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAI,mBARD;;AASpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAK,kBAfD;;AAgBpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,YAAY,EAAS,cAtBD;;AAuBpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAU,aA7BD;;AA8BpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,qBArCD;;AAsCpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,aAAa,EAAQ,eA9CD;;AA+CpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAG,oBArDD;;AAsDpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAM,iBA5DD;;AA6DpB;AACF;AACA;AACA;AACA;AACEC,EAAAA,YAAY,EAAS,cAlED;;AAmEpB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAU,aAzED;;AA0EpB;AACF;AACA;AACA;AACA;AACEC,EAAAA,YAAY,EAAS,cAAA;AA/ED,EAAf;AAkFP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,sBAAsB,GAAG;AACpCC,EAAAA,KAAK,EAAE,OAD6B;AAEpCC,EAAAA,KAAK,EAAE,OAAA;AAF6B,CAA/B,CAAA;AAKP;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,MAAM,GAAG,4BAAf,CAAA;AAEP;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,WAAW,GAAG,WAApB,CAAA;AAEP;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,eAAe,GAAG,QAAxB,CAAA;AAEP;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,qBAAqB,GAAG,aAA9B,CAAA;AAEP;AACA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"}